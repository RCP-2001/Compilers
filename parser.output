Terminals unused in grammar

    SIZEOF
    CHSIGN


State 1 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declist

    2 declist: declist decl
    3        | decl

    4 decl: varDecl
    5     | funDecl
    6     | error

    7 varDecl: typeSpec varDeclList SEMI
    8        | error varDeclList SEMI
    9        | typeSpec error SEMI

   10 scopedVarDecl: STATIC typeSpec varDeclList SEMI
   11              | typeSpec varDeclList SEMI

   12 varDeclList: varDeclList COMMA varDeclInit
   13            | varDeclInit

   14 varDeclInit: varDeclID
   15            | varDeclID COLON simpleExp

   16 varDeclID: ID
   17          | ID LBRACK NUMCONST RBRACK

   18 typeSpec: INT
   19         | BOOL
   20         | CHAR

   21 funDecl: typeSpec ID LPAREN params RPAREN compoundStmt
   22        | ID LPAREN params RPAREN compoundStmt

   23 params: paramList
   24       | ε

   25 paramList: paramList SEMI paramTypeList
   26          | paramTypeList

   27 paramTypeList: typeSpec paramIDList

   28 paramIDList: paramIDList COMMA paramID
   29            | paramID

   30 paramID: ID
   31        | ID LBRACK RBRACK

   32 stmt: openStatement
   33     | closedStatement

   34 openStatement: openItrStmt
   35              | openSelectStatement

   36 closedStatement: closedSelectStatement
   37                | closedItrStmt
   38                | simpleStatement

   39 openSelectStatement: IF exp THEN stmt
   40                    | IF exp THEN closedStatement ELSE openStatement

   41 closedSelectStatement: IF exp THEN closedStatement ELSE closedStatement

   42 simpleStatement: expStmt
   43                | compoundStmt
   44                | breakStmt
   45                | returnStmt

   46 expStmt: exp SEMI
   47        | SEMI

   48 compoundStmt: LCURL LocalDecls stmtList RCURL

   49 LocalDecls: LocalDecls scopedVarDecl
   50           | ε

   51 stmtList: stmtList stmt
   52         | ε

   53 openItrStmt: WHILE simpleExp DO openStatement
   54            | FOR ID ASSIGN itrRange DO openStatement

   55 closedItrStmt: WHILE simpleExp DO closedStatement
   56              | FOR ID ASSIGN itrRange DO closedStatement

   57 itrRange: simpleExp TO simpleExp
   58         | simpleExp TO simpleExp BY simpleExp

   59 returnStmt: RETURN SEMI
   60           | RETURN exp SEMI

   61 breakStmt: BREAK SEMI

   62 exp: mutable assignop exp
   63    | mutable INC
   64    | mutable DEC
   65    | simpleExp

   66 assignop: ASSIGN
   67         | ADDASS
   68         | DECASS
   69         | MULASS
   70         | DIVASS

   71 simpleExp: simpleExp OR andExp
   72          | andExp

   73 andExp: andExp AND unaryRelExp
   74       | unaryRelExp

   75 unaryRelExp: NOT unaryRelExp
   76            | relExp

   77 relExp: sumExp relop sumExp
   78       | sumExp

   79 relop: LESS
   80      | LEQ
   81      | GREATER
   82      | GEQ
   83      | EQ
   84      | NEQ

   85 sumExp: sumExp sumop mulExp
   86       | mulExp

   87 sumop: ADD
   88      | SUB

   89 mulExp: mulExp mulop unaryExp
   90       | unaryExp

   91 mulop: MUL
   92      | DIV
   93      | MOD

   94 unaryExp: unaryOp unaryExp
   95         | factor

   96 unaryOp: chsign
   97        | sizeof
   98        | QMARK

   99 chsign: SUB

  100 sizeof: MUL

  101 factor: mutable
  102       | immutable

  103 mutable: ID
  104        | ID LBRACK exp RBRACK

  105 immutable: LPAREN exp RPAREN
  106          | call
  107          | constant

  108 call: ID LPAREN args RPAREN

  109 args: argList
  110     | ε

  111 argList: argList COMMA exp
  112        | exp

  113 constant: NUMCONST
  114         | CHARCONST
  115         | STRINGCONST
  116         | BOOLCONST


Terminals, with rules where they appear

    $end (0) 0
    error (256) 6 8 9
    SIZEOF <tokenData> (258)
    CHSIGN <tokenData> (259)
    ID <tokenData> (260) 16 17 21 22 30 31 54 56 103 104 108
    NUMCONST <tokenData> (261) 17 113
    CHARCONST <tokenData> (262) 114
    STRINGCONST <tokenData> (263) 115
    BOOLCONST <tokenData> (264) 116
    BOOL <tokenData> (265) 19
    INT <tokenData> (266) 18
    CHAR <tokenData> (267) 20
    IF <tokenData> (268) 39 40 41
    THEN <tokenData> (269) 39 40 41
    ELSE <tokenData> (270) 40 41
    WHILE <tokenData> (271) 53 55
    FOR <tokenData> (272) 54 56
    DO <tokenData> (273) 53 54 55 56
    TO <tokenData> (274) 57 58
    BY <tokenData> (275) 58
    RETURN <tokenData> (276) 59 60
    BREAK <tokenData> (277) 61
    OR <tokenData> (278) 71
    AND <tokenData> (279) 73
    NOT <tokenData> (280) 75
    STATIC <tokenData> (281) 10
    SEMI <tokenData> (282) 7 8 9 10 11 25 46 47 59 60 61
    COMMA <tokenData> (283) 12 28 111
    COLON <tokenData> (284) 15
    LBRACK <tokenData> (285) 17 31 104
    RBRACK <tokenData> (286) 17 31 104
    LCURL <tokenData> (287) 48
    RCURL <tokenData> (288) 48
    INC <tokenData> (289) 63
    DEC <tokenData> (290) 64
    ADDASS <tokenData> (291) 67
    DECASS <tokenData> (292) 68
    MULASS <tokenData> (293) 69
    DIVASS <tokenData> (294) 70
    LEQ <tokenData> (295) 80
    GEQ <tokenData> (296) 82
    LESS <tokenData> (297) 79
    GREATER <tokenData> (298) 81
    EQ <tokenData> (299) 83
    NEQ <tokenData> (300) 84
    ADD <tokenData> (301) 87
    SUB <tokenData> (302) 88 99
    MUL <tokenData> (303) 91 100
    DIV <tokenData> (304) 92
    MOD <tokenData> (305) 93
    QMARK <tokenData> (306) 98
    ASSIGN <tokenData> (307) 54 56 66
    LPAREN <tokenData> (308) 21 22 105 108
    RPAREN <tokenData> (309) 21 22 105 108


Nonterminals, with rules where they appear

    $accept (55)
        on left: 0
    program (56)
        on left: 1
        on right: 0
    declist <tree> (57)
        on left: 2 3
        on right: 1 2
    decl <tree> (58)
        on left: 4 5 6
        on right: 2 3
    varDecl <tree> (59)
        on left: 7 8 9
        on right: 4
    scopedVarDecl <tree> (60)
        on left: 10 11
        on right: 49
    varDeclList <tree> (61)
        on left: 12 13
        on right: 7 8 10 11 12
    varDeclInit <tree> (62)
        on left: 14 15
        on right: 12 13
    varDeclID <tree> (63)
        on left: 16 17
        on right: 14 15
    typeSpec <type> (64)
        on left: 18 19 20
        on right: 7 9 10 11 21 27
    funDecl <tree> (65)
        on left: 21 22
        on right: 5
    params <tree> (66)
        on left: 23 24
        on right: 21 22
    paramList <tree> (67)
        on left: 25 26
        on right: 23 25
    paramTypeList <tree> (68)
        on left: 27
        on right: 25 26
    paramIDList <tree> (69)
        on left: 28 29
        on right: 27 28
    paramID <tree> (70)
        on left: 30 31
        on right: 28 29
    stmt <tree> (71)
        on left: 32 33
        on right: 39 51
    openStatement <tree> (72)
        on left: 34 35
        on right: 32 40 53 54
    closedStatement <tree> (73)
        on left: 36 37 38
        on right: 33 40 41 55 56
    openSelectStatement <tree> (74)
        on left: 39 40
        on right: 35
    closedSelectStatement <tree> (75)
        on left: 41
        on right: 36
    simpleStatement <tree> (76)
        on left: 42 43 44 45
        on right: 38
    expStmt <tree> (77)
        on left: 46 47
        on right: 42
    compoundStmt <tree> (78)
        on left: 48
        on right: 21 22 43
    LocalDecls <tree> (79)
        on left: 49 50
        on right: 48 49
    stmtList <tree> (80)
        on left: 51 52
        on right: 48 51
    openItrStmt <tree> (81)
        on left: 53 54
        on right: 34
    closedItrStmt <tree> (82)
        on left: 55 56
        on right: 37
    itrRange <tree> (83)
        on left: 57 58
        on right: 54 56
    returnStmt <tree> (84)
        on left: 59 60
        on right: 45
    breakStmt <tree> (85)
        on left: 61
        on right: 44
    exp <tree> (86)
        on left: 62 63 64 65
        on right: 39 40 41 46 60 62 104 105 111 112
    assignop <tree> (87)
        on left: 66 67 68 69 70
        on right: 62
    simpleExp <tree> (88)
        on left: 71 72
        on right: 15 53 55 57 58 65 71
    andExp <tree> (89)
        on left: 73 74
        on right: 71 72 73
    unaryRelExp <tree> (90)
        on left: 75 76
        on right: 73 74 75
    relExp <tree> (91)
        on left: 77 78
        on right: 76
    relop <tree> (92)
        on left: 79 80 81 82 83 84
        on right: 77
    sumExp <tree> (93)
        on left: 85 86
        on right: 77 78 85
    sumop <tree> (94)
        on left: 87 88
        on right: 85
    mulExp <tree> (95)
        on left: 89 90
        on right: 85 86 89
    mulop <tree> (96)
        on left: 91 92 93
        on right: 89
    unaryExp <tree> (97)
        on left: 94 95
        on right: 89 90 94
    unaryOp <tree> (98)
        on left: 96 97 98
        on right: 94
    chsign <tokenData> (99)
        on left: 99
        on right: 96
    sizeof <tokenData> (100)
        on left: 100
        on right: 97
    factor <tree> (101)
        on left: 101 102
        on right: 95
    mutable <tree> (102)
        on left: 103 104
        on right: 62 63 64 101
    immutable <tree> (103)
        on left: 105 106 107
        on right: 102
    call <tree> (104)
        on left: 108
        on right: 106
    args <tree> (105)
        on left: 109 110
        on right: 108
    argList <tree> (106)
        on left: 111 112
        on right: 109 111
    constant <tree> (107)
        on left: 113 114 115 116
        on right: 107


State 0

    0 $accept: • program $end

    error  shift, and go to state 1
    ID     shift, and go to state 2
    BOOL   shift, and go to state 3
    INT    shift, and go to state 4
    CHAR   shift, and go to state 5

    program   go to state 6
    declist   go to state 7
    decl      go to state 8
    varDecl   go to state 9
    typeSpec  go to state 10
    funDecl   go to state 11


State 1

    6 decl: error •
    8 varDecl: error • varDeclList SEMI

    ID  shift, and go to state 12

    ID        [reduce using rule 6 (decl)]
    $default  reduce using rule 6 (decl)

    varDeclList  go to state 13
    varDeclInit  go to state 14
    varDeclID    go to state 15


State 2

   22 funDecl: ID • LPAREN params RPAREN compoundStmt

    LPAREN  shift, and go to state 16


State 3

   19 typeSpec: BOOL •

    $default  reduce using rule 19 (typeSpec)


State 4

   18 typeSpec: INT •

    $default  reduce using rule 18 (typeSpec)


State 5

   20 typeSpec: CHAR •

    $default  reduce using rule 20 (typeSpec)


State 6

    0 $accept: program • $end

    $end  shift, and go to state 17


State 7

    1 program: declist •
    2 declist: declist • decl

    error  shift, and go to state 1
    ID     shift, and go to state 2
    BOOL   shift, and go to state 3
    INT    shift, and go to state 4
    CHAR   shift, and go to state 5

    $end  reduce using rule 1 (program)

    decl      go to state 18
    varDecl   go to state 9
    typeSpec  go to state 10
    funDecl   go to state 11


State 8

    3 declist: decl •

    $default  reduce using rule 3 (declist)


State 9

    4 decl: varDecl •

    $default  reduce using rule 4 (decl)


State 10

    7 varDecl: typeSpec • varDeclList SEMI
    9        | typeSpec • error SEMI
   21 funDecl: typeSpec • ID LPAREN params RPAREN compoundStmt

    error  shift, and go to state 19
    ID     shift, and go to state 20

    varDeclList  go to state 21
    varDeclInit  go to state 14
    varDeclID    go to state 15


State 11

    5 decl: funDecl •

    $default  reduce using rule 5 (decl)


State 12

   16 varDeclID: ID •
   17          | ID • LBRACK NUMCONST RBRACK

    LBRACK  shift, and go to state 22

    $default  reduce using rule 16 (varDeclID)


State 13

    8 varDecl: error varDeclList • SEMI
   12 varDeclList: varDeclList • COMMA varDeclInit

    SEMI   shift, and go to state 23
    COMMA  shift, and go to state 24


State 14

   13 varDeclList: varDeclInit •

    $default  reduce using rule 13 (varDeclList)


State 15

   14 varDeclInit: varDeclID •
   15            | varDeclID • COLON simpleExp

    COLON  shift, and go to state 25

    $default  reduce using rule 14 (varDeclInit)


State 16

   22 funDecl: ID LPAREN • params RPAREN compoundStmt

    BOOL  shift, and go to state 3
    INT   shift, and go to state 4
    CHAR  shift, and go to state 5

    $default  reduce using rule 24 (params)

    typeSpec       go to state 26
    params         go to state 27
    paramList      go to state 28
    paramTypeList  go to state 29


State 17

    0 $accept: program $end •

    $default  accept


State 18

    2 declist: declist decl •

    $default  reduce using rule 2 (declist)


State 19

    9 varDecl: typeSpec error • SEMI

    SEMI  shift, and go to state 30


State 20

   16 varDeclID: ID •
   17          | ID • LBRACK NUMCONST RBRACK
   21 funDecl: typeSpec ID • LPAREN params RPAREN compoundStmt

    LBRACK  shift, and go to state 22
    LPAREN  shift, and go to state 31

    $default  reduce using rule 16 (varDeclID)


State 21

    7 varDecl: typeSpec varDeclList • SEMI
   12 varDeclList: varDeclList • COMMA varDeclInit

    SEMI   shift, and go to state 32
    COMMA  shift, and go to state 24


State 22

   17 varDeclID: ID LBRACK • NUMCONST RBRACK

    NUMCONST  shift, and go to state 33


State 23

    8 varDecl: error varDeclList SEMI •

    $default  reduce using rule 8 (varDecl)


State 24

   12 varDeclList: varDeclList COMMA • varDeclInit

    ID  shift, and go to state 12

    varDeclInit  go to state 34
    varDeclID    go to state 15


State 25

   15 varDeclInit: varDeclID COLON • simpleExp

    ID           shift, and go to state 35
    NUMCONST     shift, and go to state 36
    CHARCONST    shift, and go to state 37
    STRINGCONST  shift, and go to state 38
    BOOLCONST    shift, and go to state 39
    NOT          shift, and go to state 40
    SUB          shift, and go to state 41
    MUL          shift, and go to state 42
    QMARK        shift, and go to state 43
    LPAREN       shift, and go to state 44

    simpleExp    go to state 45
    andExp       go to state 46
    unaryRelExp  go to state 47
    relExp       go to state 48
    sumExp       go to state 49
    mulExp       go to state 50
    unaryExp     go to state 51
    unaryOp      go to state 52
    chsign       go to state 53
    sizeof       go to state 54
    factor       go to state 55
    mutable      go to state 56
    immutable    go to state 57
    call         go to state 58
    constant     go to state 59


State 26

   27 paramTypeList: typeSpec • paramIDList

    ID  shift, and go to state 60

    paramIDList  go to state 61
    paramID      go to state 62


State 27

   22 funDecl: ID LPAREN params • RPAREN compoundStmt

    RPAREN  shift, and go to state 63


State 28

   23 params: paramList •
   25 paramList: paramList • SEMI paramTypeList

    SEMI  shift, and go to state 64

    $default  reduce using rule 23 (params)


State 29

   26 paramList: paramTypeList •

    $default  reduce using rule 26 (paramList)


State 30

    9 varDecl: typeSpec error SEMI •

    $default  reduce using rule 9 (varDecl)


State 31

   21 funDecl: typeSpec ID LPAREN • params RPAREN compoundStmt

    BOOL  shift, and go to state 3
    INT   shift, and go to state 4
    CHAR  shift, and go to state 5

    $default  reduce using rule 24 (params)

    typeSpec       go to state 26
    params         go to state 65
    paramList      go to state 28
    paramTypeList  go to state 29


State 32

    7 varDecl: typeSpec varDeclList SEMI •

    $default  reduce using rule 7 (varDecl)


State 33

   17 varDeclID: ID LBRACK NUMCONST • RBRACK

    RBRACK  shift, and go to state 66


State 34

   12 varDeclList: varDeclList COMMA varDeclInit •

    $default  reduce using rule 12 (varDeclList)


State 35

  103 mutable: ID •
  104        | ID • LBRACK exp RBRACK
  108 call: ID • LPAREN args RPAREN

    LBRACK  shift, and go to state 67
    LPAREN  shift, and go to state 68

    $default  reduce using rule 103 (mutable)


State 36

  113 constant: NUMCONST •

    $default  reduce using rule 113 (constant)


State 37

  114 constant: CHARCONST •

    $default  reduce using rule 114 (constant)


State 38

  115 constant: STRINGCONST •

    $default  reduce using rule 115 (constant)


State 39

  116 constant: BOOLCONST •

    $default  reduce using rule 116 (constant)


State 40

   75 unaryRelExp: NOT • unaryRelExp

    ID           shift, and go to state 35
    NUMCONST     shift, and go to state 36
    CHARCONST    shift, and go to state 37
    STRINGCONST  shift, and go to state 38
    BOOLCONST    shift, and go to state 39
    NOT          shift, and go to state 40
    SUB          shift, and go to state 41
    MUL          shift, and go to state 42
    QMARK        shift, and go to state 43
    LPAREN       shift, and go to state 44

    unaryRelExp  go to state 69
    relExp       go to state 48
    sumExp       go to state 49
    mulExp       go to state 50
    unaryExp     go to state 51
    unaryOp      go to state 52
    chsign       go to state 53
    sizeof       go to state 54
    factor       go to state 55
    mutable      go to state 56
    immutable    go to state 57
    call         go to state 58
    constant     go to state 59


State 41

   99 chsign: SUB •

    $default  reduce using rule 99 (chsign)


State 42

  100 sizeof: MUL •

    $default  reduce using rule 100 (sizeof)


State 43

   98 unaryOp: QMARK •

    $default  reduce using rule 98 (unaryOp)


State 44

  105 immutable: LPAREN • exp RPAREN

    ID           shift, and go to state 35
    NUMCONST     shift, and go to state 36
    CHARCONST    shift, and go to state 37
    STRINGCONST  shift, and go to state 38
    BOOLCONST    shift, and go to state 39
    NOT          shift, and go to state 40
    SUB          shift, and go to state 41
    MUL          shift, and go to state 42
    QMARK        shift, and go to state 43
    LPAREN       shift, and go to state 44

    exp          go to state 70
    simpleExp    go to state 71
    andExp       go to state 46
    unaryRelExp  go to state 47
    relExp       go to state 48
    sumExp       go to state 49
    mulExp       go to state 50
    unaryExp     go to state 51
    unaryOp      go to state 52
    chsign       go to state 53
    sizeof       go to state 54
    factor       go to state 55
    mutable      go to state 72
    immutable    go to state 57
    call         go to state 58
    constant     go to state 59


State 45

   15 varDeclInit: varDeclID COLON simpleExp •
   71 simpleExp: simpleExp • OR andExp

    OR  shift, and go to state 73

    $default  reduce using rule 15 (varDeclInit)


State 46

   72 simpleExp: andExp •
   73 andExp: andExp • AND unaryRelExp

    AND  shift, and go to state 74

    $default  reduce using rule 72 (simpleExp)


State 47

   74 andExp: unaryRelExp •

    $default  reduce using rule 74 (andExp)


State 48

   76 unaryRelExp: relExp •

    $default  reduce using rule 76 (unaryRelExp)


State 49

   77 relExp: sumExp • relop sumExp
   78       | sumExp •
   85 sumExp: sumExp • sumop mulExp

    LEQ      shift, and go to state 75
    GEQ      shift, and go to state 76
    LESS     shift, and go to state 77
    GREATER  shift, and go to state 78
    EQ       shift, and go to state 79
    NEQ      shift, and go to state 80
    ADD      shift, and go to state 81
    SUB      shift, and go to state 82

    $default  reduce using rule 78 (relExp)

    relop  go to state 83
    sumop  go to state 84


State 50

   86 sumExp: mulExp •
   89 mulExp: mulExp • mulop unaryExp

    MUL  shift, and go to state 85
    DIV  shift, and go to state 86
    MOD  shift, and go to state 87

    $default  reduce using rule 86 (sumExp)

    mulop  go to state 88


State 51

   90 mulExp: unaryExp •

    $default  reduce using rule 90 (mulExp)


State 52

   94 unaryExp: unaryOp • unaryExp

    ID           shift, and go to state 35
    NUMCONST     shift, and go to state 36
    CHARCONST    shift, and go to state 37
    STRINGCONST  shift, and go to state 38
    BOOLCONST    shift, and go to state 39
    SUB          shift, and go to state 41
    MUL          shift, and go to state 42
    QMARK        shift, and go to state 43
    LPAREN       shift, and go to state 44

    unaryExp   go to state 89
    unaryOp    go to state 52
    chsign     go to state 53
    sizeof     go to state 54
    factor     go to state 55
    mutable    go to state 56
    immutable  go to state 57
    call       go to state 58
    constant   go to state 59


State 53

   96 unaryOp: chsign •

    $default  reduce using rule 96 (unaryOp)


State 54

   97 unaryOp: sizeof •

    $default  reduce using rule 97 (unaryOp)


State 55

   95 unaryExp: factor •

    $default  reduce using rule 95 (unaryExp)


State 56

  101 factor: mutable •

    $default  reduce using rule 101 (factor)


State 57

  102 factor: immutable •

    $default  reduce using rule 102 (factor)


State 58

  106 immutable: call •

    $default  reduce using rule 106 (immutable)


State 59

  107 immutable: constant •

    $default  reduce using rule 107 (immutable)


State 60

   30 paramID: ID •
   31        | ID • LBRACK RBRACK

    LBRACK  shift, and go to state 90

    $default  reduce using rule 30 (paramID)


State 61

   27 paramTypeList: typeSpec paramIDList •
   28 paramIDList: paramIDList • COMMA paramID

    COMMA  shift, and go to state 91

    $default  reduce using rule 27 (paramTypeList)


State 62

   29 paramIDList: paramID •

    $default  reduce using rule 29 (paramIDList)


State 63

   22 funDecl: ID LPAREN params RPAREN • compoundStmt

    LCURL  shift, and go to state 92

    compoundStmt  go to state 93


State 64

   25 paramList: paramList SEMI • paramTypeList

    BOOL  shift, and go to state 3
    INT   shift, and go to state 4
    CHAR  shift, and go to state 5

    typeSpec       go to state 26
    paramTypeList  go to state 94


State 65

   21 funDecl: typeSpec ID LPAREN params • RPAREN compoundStmt

    RPAREN  shift, and go to state 95


State 66

   17 varDeclID: ID LBRACK NUMCONST RBRACK •

    $default  reduce using rule 17 (varDeclID)


State 67

  104 mutable: ID LBRACK • exp RBRACK

    ID           shift, and go to state 35
    NUMCONST     shift, and go to state 36
    CHARCONST    shift, and go to state 37
    STRINGCONST  shift, and go to state 38
    BOOLCONST    shift, and go to state 39
    NOT          shift, and go to state 40
    SUB          shift, and go to state 41
    MUL          shift, and go to state 42
    QMARK        shift, and go to state 43
    LPAREN       shift, and go to state 44

    exp          go to state 96
    simpleExp    go to state 71
    andExp       go to state 46
    unaryRelExp  go to state 47
    relExp       go to state 48
    sumExp       go to state 49
    mulExp       go to state 50
    unaryExp     go to state 51
    unaryOp      go to state 52
    chsign       go to state 53
    sizeof       go to state 54
    factor       go to state 55
    mutable      go to state 72
    immutable    go to state 57
    call         go to state 58
    constant     go to state 59


State 68

  108 call: ID LPAREN • args RPAREN

    ID           shift, and go to state 35
    NUMCONST     shift, and go to state 36
    CHARCONST    shift, and go to state 37
    STRINGCONST  shift, and go to state 38
    BOOLCONST    shift, and go to state 39
    NOT          shift, and go to state 40
    SUB          shift, and go to state 41
    MUL          shift, and go to state 42
    QMARK        shift, and go to state 43
    LPAREN       shift, and go to state 44

    $default  reduce using rule 110 (args)

    exp          go to state 97
    simpleExp    go to state 71
    andExp       go to state 46
    unaryRelExp  go to state 47
    relExp       go to state 48
    sumExp       go to state 49
    mulExp       go to state 50
    unaryExp     go to state 51
    unaryOp      go to state 52
    chsign       go to state 53
    sizeof       go to state 54
    factor       go to state 55
    mutable      go to state 72
    immutable    go to state 57
    call         go to state 58
    args         go to state 98
    argList      go to state 99
    constant     go to state 59


State 69

   75 unaryRelExp: NOT unaryRelExp •

    $default  reduce using rule 75 (unaryRelExp)


State 70

  105 immutable: LPAREN exp • RPAREN

    RPAREN  shift, and go to state 100


State 71

   65 exp: simpleExp •
   71 simpleExp: simpleExp • OR andExp

    OR  shift, and go to state 73

    $default  reduce using rule 65 (exp)


State 72

   62 exp: mutable • assignop exp
   63    | mutable • INC
   64    | mutable • DEC
  101 factor: mutable •

    INC     shift, and go to state 101
    DEC     shift, and go to state 102
    ADDASS  shift, and go to state 103
    DECASS  shift, and go to state 104
    MULASS  shift, and go to state 105
    DIVASS  shift, and go to state 106
    ASSIGN  shift, and go to state 107

    $default  reduce using rule 101 (factor)

    assignop  go to state 108


State 73

   71 simpleExp: simpleExp OR • andExp

    ID           shift, and go to state 35
    NUMCONST     shift, and go to state 36
    CHARCONST    shift, and go to state 37
    STRINGCONST  shift, and go to state 38
    BOOLCONST    shift, and go to state 39
    NOT          shift, and go to state 40
    SUB          shift, and go to state 41
    MUL          shift, and go to state 42
    QMARK        shift, and go to state 43
    LPAREN       shift, and go to state 44

    andExp       go to state 109
    unaryRelExp  go to state 47
    relExp       go to state 48
    sumExp       go to state 49
    mulExp       go to state 50
    unaryExp     go to state 51
    unaryOp      go to state 52
    chsign       go to state 53
    sizeof       go to state 54
    factor       go to state 55
    mutable      go to state 56
    immutable    go to state 57
    call         go to state 58
    constant     go to state 59


State 74

   73 andExp: andExp AND • unaryRelExp

    ID           shift, and go to state 35
    NUMCONST     shift, and go to state 36
    CHARCONST    shift, and go to state 37
    STRINGCONST  shift, and go to state 38
    BOOLCONST    shift, and go to state 39
    NOT          shift, and go to state 40
    SUB          shift, and go to state 41
    MUL          shift, and go to state 42
    QMARK        shift, and go to state 43
    LPAREN       shift, and go to state 44

    unaryRelExp  go to state 110
    relExp       go to state 48
    sumExp       go to state 49
    mulExp       go to state 50
    unaryExp     go to state 51
    unaryOp      go to state 52
    chsign       go to state 53
    sizeof       go to state 54
    factor       go to state 55
    mutable      go to state 56
    immutable    go to state 57
    call         go to state 58
    constant     go to state 59


State 75

   80 relop: LEQ •

    $default  reduce using rule 80 (relop)


State 76

   82 relop: GEQ •

    $default  reduce using rule 82 (relop)


State 77

   79 relop: LESS •

    $default  reduce using rule 79 (relop)


State 78

   81 relop: GREATER •

    $default  reduce using rule 81 (relop)


State 79

   83 relop: EQ •

    $default  reduce using rule 83 (relop)


State 80

   84 relop: NEQ •

    $default  reduce using rule 84 (relop)


State 81

   87 sumop: ADD •

    $default  reduce using rule 87 (sumop)


State 82

   88 sumop: SUB •

    $default  reduce using rule 88 (sumop)


State 83

   77 relExp: sumExp relop • sumExp

    ID           shift, and go to state 35
    NUMCONST     shift, and go to state 36
    CHARCONST    shift, and go to state 37
    STRINGCONST  shift, and go to state 38
    BOOLCONST    shift, and go to state 39
    SUB          shift, and go to state 41
    MUL          shift, and go to state 42
    QMARK        shift, and go to state 43
    LPAREN       shift, and go to state 44

    sumExp     go to state 111
    mulExp     go to state 50
    unaryExp   go to state 51
    unaryOp    go to state 52
    chsign     go to state 53
    sizeof     go to state 54
    factor     go to state 55
    mutable    go to state 56
    immutable  go to state 57
    call       go to state 58
    constant   go to state 59


State 84

   85 sumExp: sumExp sumop • mulExp

    ID           shift, and go to state 35
    NUMCONST     shift, and go to state 36
    CHARCONST    shift, and go to state 37
    STRINGCONST  shift, and go to state 38
    BOOLCONST    shift, and go to state 39
    SUB          shift, and go to state 41
    MUL          shift, and go to state 42
    QMARK        shift, and go to state 43
    LPAREN       shift, and go to state 44

    mulExp     go to state 112
    unaryExp   go to state 51
    unaryOp    go to state 52
    chsign     go to state 53
    sizeof     go to state 54
    factor     go to state 55
    mutable    go to state 56
    immutable  go to state 57
    call       go to state 58
    constant   go to state 59


State 85

   91 mulop: MUL •

    $default  reduce using rule 91 (mulop)


State 86

   92 mulop: DIV •

    $default  reduce using rule 92 (mulop)


State 87

   93 mulop: MOD •

    $default  reduce using rule 93 (mulop)


State 88

   89 mulExp: mulExp mulop • unaryExp

    ID           shift, and go to state 35
    NUMCONST     shift, and go to state 36
    CHARCONST    shift, and go to state 37
    STRINGCONST  shift, and go to state 38
    BOOLCONST    shift, and go to state 39
    SUB          shift, and go to state 41
    MUL          shift, and go to state 42
    QMARK        shift, and go to state 43
    LPAREN       shift, and go to state 44

    unaryExp   go to state 113
    unaryOp    go to state 52
    chsign     go to state 53
    sizeof     go to state 54
    factor     go to state 55
    mutable    go to state 56
    immutable  go to state 57
    call       go to state 58
    constant   go to state 59


State 89

   94 unaryExp: unaryOp unaryExp •

    $default  reduce using rule 94 (unaryExp)


State 90

   31 paramID: ID LBRACK • RBRACK

    RBRACK  shift, and go to state 114


State 91

   28 paramIDList: paramIDList COMMA • paramID

    ID  shift, and go to state 60

    paramID  go to state 115


State 92

   48 compoundStmt: LCURL • LocalDecls stmtList RCURL

    $default  reduce using rule 50 (LocalDecls)

    LocalDecls  go to state 116


State 93

   22 funDecl: ID LPAREN params RPAREN compoundStmt •

    $default  reduce using rule 22 (funDecl)


State 94

   25 paramList: paramList SEMI paramTypeList •

    $default  reduce using rule 25 (paramList)


State 95

   21 funDecl: typeSpec ID LPAREN params RPAREN • compoundStmt

    LCURL  shift, and go to state 92

    compoundStmt  go to state 117


State 96

  104 mutable: ID LBRACK exp • RBRACK

    RBRACK  shift, and go to state 118


State 97

  112 argList: exp •

    $default  reduce using rule 112 (argList)


State 98

  108 call: ID LPAREN args • RPAREN

    RPAREN  shift, and go to state 119


State 99

  109 args: argList •
  111 argList: argList • COMMA exp

    COMMA  shift, and go to state 120

    $default  reduce using rule 109 (args)


State 100

  105 immutable: LPAREN exp RPAREN •

    $default  reduce using rule 105 (immutable)


State 101

   63 exp: mutable INC •

    $default  reduce using rule 63 (exp)


State 102

   64 exp: mutable DEC •

    $default  reduce using rule 64 (exp)


State 103

   67 assignop: ADDASS •

    $default  reduce using rule 67 (assignop)


State 104

   68 assignop: DECASS •

    $default  reduce using rule 68 (assignop)


State 105

   69 assignop: MULASS •

    $default  reduce using rule 69 (assignop)


State 106

   70 assignop: DIVASS •

    $default  reduce using rule 70 (assignop)


State 107

   66 assignop: ASSIGN •

    $default  reduce using rule 66 (assignop)


State 108

   62 exp: mutable assignop • exp

    ID           shift, and go to state 35
    NUMCONST     shift, and go to state 36
    CHARCONST    shift, and go to state 37
    STRINGCONST  shift, and go to state 38
    BOOLCONST    shift, and go to state 39
    NOT          shift, and go to state 40
    SUB          shift, and go to state 41
    MUL          shift, and go to state 42
    QMARK        shift, and go to state 43
    LPAREN       shift, and go to state 44

    exp          go to state 121
    simpleExp    go to state 71
    andExp       go to state 46
    unaryRelExp  go to state 47
    relExp       go to state 48
    sumExp       go to state 49
    mulExp       go to state 50
    unaryExp     go to state 51
    unaryOp      go to state 52
    chsign       go to state 53
    sizeof       go to state 54
    factor       go to state 55
    mutable      go to state 72
    immutable    go to state 57
    call         go to state 58
    constant     go to state 59


State 109

   71 simpleExp: simpleExp OR andExp •
   73 andExp: andExp • AND unaryRelExp

    AND  shift, and go to state 74

    $default  reduce using rule 71 (simpleExp)


State 110

   73 andExp: andExp AND unaryRelExp •

    $default  reduce using rule 73 (andExp)


State 111

   77 relExp: sumExp relop sumExp •
   85 sumExp: sumExp • sumop mulExp

    ADD  shift, and go to state 81
    SUB  shift, and go to state 82

    $default  reduce using rule 77 (relExp)

    sumop  go to state 84


State 112

   85 sumExp: sumExp sumop mulExp •
   89 mulExp: mulExp • mulop unaryExp

    MUL  shift, and go to state 85
    DIV  shift, and go to state 86
    MOD  shift, and go to state 87

    $default  reduce using rule 85 (sumExp)

    mulop  go to state 88


State 113

   89 mulExp: mulExp mulop unaryExp •

    $default  reduce using rule 89 (mulExp)


State 114

   31 paramID: ID LBRACK RBRACK •

    $default  reduce using rule 31 (paramID)


State 115

   28 paramIDList: paramIDList COMMA paramID •

    $default  reduce using rule 28 (paramIDList)


State 116

   48 compoundStmt: LCURL LocalDecls • stmtList RCURL
   49 LocalDecls: LocalDecls • scopedVarDecl

    BOOL    shift, and go to state 3
    INT     shift, and go to state 4
    CHAR    shift, and go to state 5
    STATIC  shift, and go to state 122

    $default  reduce using rule 52 (stmtList)

    scopedVarDecl  go to state 123
    typeSpec       go to state 124
    stmtList       go to state 125


State 117

   21 funDecl: typeSpec ID LPAREN params RPAREN compoundStmt •

    $default  reduce using rule 21 (funDecl)


State 118

  104 mutable: ID LBRACK exp RBRACK •

    $default  reduce using rule 104 (mutable)


State 119

  108 call: ID LPAREN args RPAREN •

    $default  reduce using rule 108 (call)


State 120

  111 argList: argList COMMA • exp

    ID           shift, and go to state 35
    NUMCONST     shift, and go to state 36
    CHARCONST    shift, and go to state 37
    STRINGCONST  shift, and go to state 38
    BOOLCONST    shift, and go to state 39
    NOT          shift, and go to state 40
    SUB          shift, and go to state 41
    MUL          shift, and go to state 42
    QMARK        shift, and go to state 43
    LPAREN       shift, and go to state 44

    exp          go to state 126
    simpleExp    go to state 71
    andExp       go to state 46
    unaryRelExp  go to state 47
    relExp       go to state 48
    sumExp       go to state 49
    mulExp       go to state 50
    unaryExp     go to state 51
    unaryOp      go to state 52
    chsign       go to state 53
    sizeof       go to state 54
    factor       go to state 55
    mutable      go to state 72
    immutable    go to state 57
    call         go to state 58
    constant     go to state 59


State 121

   62 exp: mutable assignop exp •

    $default  reduce using rule 62 (exp)


State 122

   10 scopedVarDecl: STATIC • typeSpec varDeclList SEMI

    BOOL  shift, and go to state 3
    INT   shift, and go to state 4
    CHAR  shift, and go to state 5

    typeSpec  go to state 127


State 123

   49 LocalDecls: LocalDecls scopedVarDecl •

    $default  reduce using rule 49 (LocalDecls)


State 124

   11 scopedVarDecl: typeSpec • varDeclList SEMI

    ID  shift, and go to state 12

    varDeclList  go to state 128
    varDeclInit  go to state 14
    varDeclID    go to state 15


State 125

   48 compoundStmt: LCURL LocalDecls stmtList • RCURL
   51 stmtList: stmtList • stmt

    ID           shift, and go to state 35
    NUMCONST     shift, and go to state 36
    CHARCONST    shift, and go to state 37
    STRINGCONST  shift, and go to state 38
    BOOLCONST    shift, and go to state 39
    IF           shift, and go to state 129
    WHILE        shift, and go to state 130
    FOR          shift, and go to state 131
    RETURN       shift, and go to state 132
    BREAK        shift, and go to state 133
    NOT          shift, and go to state 40
    SEMI         shift, and go to state 134
    LCURL        shift, and go to state 92
    RCURL        shift, and go to state 135
    SUB          shift, and go to state 41
    MUL          shift, and go to state 42
    QMARK        shift, and go to state 43
    LPAREN       shift, and go to state 44

    stmt                   go to state 136
    openStatement          go to state 137
    closedStatement        go to state 138
    openSelectStatement    go to state 139
    closedSelectStatement  go to state 140
    simpleStatement        go to state 141
    expStmt                go to state 142
    compoundStmt           go to state 143
    openItrStmt            go to state 144
    closedItrStmt          go to state 145
    returnStmt             go to state 146
    breakStmt              go to state 147
    exp                    go to state 148
    simpleExp              go to state 71
    andExp                 go to state 46
    unaryRelExp            go to state 47
    relExp                 go to state 48
    sumExp                 go to state 49
    mulExp                 go to state 50
    unaryExp               go to state 51
    unaryOp                go to state 52
    chsign                 go to state 53
    sizeof                 go to state 54
    factor                 go to state 55
    mutable                go to state 72
    immutable              go to state 57
    call                   go to state 58
    constant               go to state 59


State 126

  111 argList: argList COMMA exp •

    $default  reduce using rule 111 (argList)


State 127

   10 scopedVarDecl: STATIC typeSpec • varDeclList SEMI

    ID  shift, and go to state 12

    varDeclList  go to state 149
    varDeclInit  go to state 14
    varDeclID    go to state 15


State 128

   11 scopedVarDecl: typeSpec varDeclList • SEMI
   12 varDeclList: varDeclList • COMMA varDeclInit

    SEMI   shift, and go to state 150
    COMMA  shift, and go to state 24


State 129

   39 openSelectStatement: IF • exp THEN stmt
   40                    | IF • exp THEN closedStatement ELSE openStatement
   41 closedSelectStatement: IF • exp THEN closedStatement ELSE closedStatement

    ID           shift, and go to state 35
    NUMCONST     shift, and go to state 36
    CHARCONST    shift, and go to state 37
    STRINGCONST  shift, and go to state 38
    BOOLCONST    shift, and go to state 39
    NOT          shift, and go to state 40
    SUB          shift, and go to state 41
    MUL          shift, and go to state 42
    QMARK        shift, and go to state 43
    LPAREN       shift, and go to state 44

    exp          go to state 151
    simpleExp    go to state 71
    andExp       go to state 46
    unaryRelExp  go to state 47
    relExp       go to state 48
    sumExp       go to state 49
    mulExp       go to state 50
    unaryExp     go to state 51
    unaryOp      go to state 52
    chsign       go to state 53
    sizeof       go to state 54
    factor       go to state 55
    mutable      go to state 72
    immutable    go to state 57
    call         go to state 58
    constant     go to state 59


State 130

   53 openItrStmt: WHILE • simpleExp DO openStatement
   55 closedItrStmt: WHILE • simpleExp DO closedStatement

    ID           shift, and go to state 35
    NUMCONST     shift, and go to state 36
    CHARCONST    shift, and go to state 37
    STRINGCONST  shift, and go to state 38
    BOOLCONST    shift, and go to state 39
    NOT          shift, and go to state 40
    SUB          shift, and go to state 41
    MUL          shift, and go to state 42
    QMARK        shift, and go to state 43
    LPAREN       shift, and go to state 44

    simpleExp    go to state 152
    andExp       go to state 46
    unaryRelExp  go to state 47
    relExp       go to state 48
    sumExp       go to state 49
    mulExp       go to state 50
    unaryExp     go to state 51
    unaryOp      go to state 52
    chsign       go to state 53
    sizeof       go to state 54
    factor       go to state 55
    mutable      go to state 56
    immutable    go to state 57
    call         go to state 58
    constant     go to state 59


State 131

   54 openItrStmt: FOR • ID ASSIGN itrRange DO openStatement
   56 closedItrStmt: FOR • ID ASSIGN itrRange DO closedStatement

    ID  shift, and go to state 153


State 132

   59 returnStmt: RETURN • SEMI
   60           | RETURN • exp SEMI

    ID           shift, and go to state 35
    NUMCONST     shift, and go to state 36
    CHARCONST    shift, and go to state 37
    STRINGCONST  shift, and go to state 38
    BOOLCONST    shift, and go to state 39
    NOT          shift, and go to state 40
    SEMI         shift, and go to state 154
    SUB          shift, and go to state 41
    MUL          shift, and go to state 42
    QMARK        shift, and go to state 43
    LPAREN       shift, and go to state 44

    exp          go to state 155
    simpleExp    go to state 71
    andExp       go to state 46
    unaryRelExp  go to state 47
    relExp       go to state 48
    sumExp       go to state 49
    mulExp       go to state 50
    unaryExp     go to state 51
    unaryOp      go to state 52
    chsign       go to state 53
    sizeof       go to state 54
    factor       go to state 55
    mutable      go to state 72
    immutable    go to state 57
    call         go to state 58
    constant     go to state 59


State 133

   61 breakStmt: BREAK • SEMI

    SEMI  shift, and go to state 156


State 134

   47 expStmt: SEMI •

    $default  reduce using rule 47 (expStmt)


State 135

   48 compoundStmt: LCURL LocalDecls stmtList RCURL •

    $default  reduce using rule 48 (compoundStmt)


State 136

   51 stmtList: stmtList stmt •

    $default  reduce using rule 51 (stmtList)


State 137

   32 stmt: openStatement •

    $default  reduce using rule 32 (stmt)


State 138

   33 stmt: closedStatement •

    $default  reduce using rule 33 (stmt)


State 139

   35 openStatement: openSelectStatement •

    $default  reduce using rule 35 (openStatement)


State 140

   36 closedStatement: closedSelectStatement •

    $default  reduce using rule 36 (closedStatement)


State 141

   38 closedStatement: simpleStatement •

    $default  reduce using rule 38 (closedStatement)


State 142

   42 simpleStatement: expStmt •

    $default  reduce using rule 42 (simpleStatement)


State 143

   43 simpleStatement: compoundStmt •

    $default  reduce using rule 43 (simpleStatement)


State 144

   34 openStatement: openItrStmt •

    $default  reduce using rule 34 (openStatement)


State 145

   37 closedStatement: closedItrStmt •

    $default  reduce using rule 37 (closedStatement)


State 146

   45 simpleStatement: returnStmt •

    $default  reduce using rule 45 (simpleStatement)


State 147

   44 simpleStatement: breakStmt •

    $default  reduce using rule 44 (simpleStatement)


State 148

   46 expStmt: exp • SEMI

    SEMI  shift, and go to state 157


State 149

   10 scopedVarDecl: STATIC typeSpec varDeclList • SEMI
   12 varDeclList: varDeclList • COMMA varDeclInit

    SEMI   shift, and go to state 158
    COMMA  shift, and go to state 24


State 150

   11 scopedVarDecl: typeSpec varDeclList SEMI •

    $default  reduce using rule 11 (scopedVarDecl)


State 151

   39 openSelectStatement: IF exp • THEN stmt
   40                    | IF exp • THEN closedStatement ELSE openStatement
   41 closedSelectStatement: IF exp • THEN closedStatement ELSE closedStatement

    THEN  shift, and go to state 159


State 152

   53 openItrStmt: WHILE simpleExp • DO openStatement
   55 closedItrStmt: WHILE simpleExp • DO closedStatement
   71 simpleExp: simpleExp • OR andExp

    DO  shift, and go to state 160
    OR  shift, and go to state 73


State 153

   54 openItrStmt: FOR ID • ASSIGN itrRange DO openStatement
   56 closedItrStmt: FOR ID • ASSIGN itrRange DO closedStatement

    ASSIGN  shift, and go to state 161


State 154

   59 returnStmt: RETURN SEMI •

    $default  reduce using rule 59 (returnStmt)


State 155

   60 returnStmt: RETURN exp • SEMI

    SEMI  shift, and go to state 162


State 156

   61 breakStmt: BREAK SEMI •

    $default  reduce using rule 61 (breakStmt)


State 157

   46 expStmt: exp SEMI •

    $default  reduce using rule 46 (expStmt)


State 158

   10 scopedVarDecl: STATIC typeSpec varDeclList SEMI •

    $default  reduce using rule 10 (scopedVarDecl)


State 159

   39 openSelectStatement: IF exp THEN • stmt
   40                    | IF exp THEN • closedStatement ELSE openStatement
   41 closedSelectStatement: IF exp THEN • closedStatement ELSE closedStatement

    ID           shift, and go to state 35
    NUMCONST     shift, and go to state 36
    CHARCONST    shift, and go to state 37
    STRINGCONST  shift, and go to state 38
    BOOLCONST    shift, and go to state 39
    IF           shift, and go to state 129
    WHILE        shift, and go to state 130
    FOR          shift, and go to state 131
    RETURN       shift, and go to state 132
    BREAK        shift, and go to state 133
    NOT          shift, and go to state 40
    SEMI         shift, and go to state 134
    LCURL        shift, and go to state 92
    SUB          shift, and go to state 41
    MUL          shift, and go to state 42
    QMARK        shift, and go to state 43
    LPAREN       shift, and go to state 44

    stmt                   go to state 163
    openStatement          go to state 137
    closedStatement        go to state 164
    openSelectStatement    go to state 139
    closedSelectStatement  go to state 140
    simpleStatement        go to state 141
    expStmt                go to state 142
    compoundStmt           go to state 143
    openItrStmt            go to state 144
    closedItrStmt          go to state 145
    returnStmt             go to state 146
    breakStmt              go to state 147
    exp                    go to state 148
    simpleExp              go to state 71
    andExp                 go to state 46
    unaryRelExp            go to state 47
    relExp                 go to state 48
    sumExp                 go to state 49
    mulExp                 go to state 50
    unaryExp               go to state 51
    unaryOp                go to state 52
    chsign                 go to state 53
    sizeof                 go to state 54
    factor                 go to state 55
    mutable                go to state 72
    immutable              go to state 57
    call                   go to state 58
    constant               go to state 59


State 160

   53 openItrStmt: WHILE simpleExp DO • openStatement
   55 closedItrStmt: WHILE simpleExp DO • closedStatement

    ID           shift, and go to state 35
    NUMCONST     shift, and go to state 36
    CHARCONST    shift, and go to state 37
    STRINGCONST  shift, and go to state 38
    BOOLCONST    shift, and go to state 39
    IF           shift, and go to state 129
    WHILE        shift, and go to state 130
    FOR          shift, and go to state 131
    RETURN       shift, and go to state 132
    BREAK        shift, and go to state 133
    NOT          shift, and go to state 40
    SEMI         shift, and go to state 134
    LCURL        shift, and go to state 92
    SUB          shift, and go to state 41
    MUL          shift, and go to state 42
    QMARK        shift, and go to state 43
    LPAREN       shift, and go to state 44

    openStatement          go to state 165
    closedStatement        go to state 166
    openSelectStatement    go to state 139
    closedSelectStatement  go to state 140
    simpleStatement        go to state 141
    expStmt                go to state 142
    compoundStmt           go to state 143
    openItrStmt            go to state 144
    closedItrStmt          go to state 145
    returnStmt             go to state 146
    breakStmt              go to state 147
    exp                    go to state 148
    simpleExp              go to state 71
    andExp                 go to state 46
    unaryRelExp            go to state 47
    relExp                 go to state 48
    sumExp                 go to state 49
    mulExp                 go to state 50
    unaryExp               go to state 51
    unaryOp                go to state 52
    chsign                 go to state 53
    sizeof                 go to state 54
    factor                 go to state 55
    mutable                go to state 72
    immutable              go to state 57
    call                   go to state 58
    constant               go to state 59


State 161

   54 openItrStmt: FOR ID ASSIGN • itrRange DO openStatement
   56 closedItrStmt: FOR ID ASSIGN • itrRange DO closedStatement

    ID           shift, and go to state 35
    NUMCONST     shift, and go to state 36
    CHARCONST    shift, and go to state 37
    STRINGCONST  shift, and go to state 38
    BOOLCONST    shift, and go to state 39
    NOT          shift, and go to state 40
    SUB          shift, and go to state 41
    MUL          shift, and go to state 42
    QMARK        shift, and go to state 43
    LPAREN       shift, and go to state 44

    itrRange     go to state 167
    simpleExp    go to state 168
    andExp       go to state 46
    unaryRelExp  go to state 47
    relExp       go to state 48
    sumExp       go to state 49
    mulExp       go to state 50
    unaryExp     go to state 51
    unaryOp      go to state 52
    chsign       go to state 53
    sizeof       go to state 54
    factor       go to state 55
    mutable      go to state 56
    immutable    go to state 57
    call         go to state 58
    constant     go to state 59


State 162

   60 returnStmt: RETURN exp SEMI •

    $default  reduce using rule 60 (returnStmt)


State 163

   39 openSelectStatement: IF exp THEN stmt •

    $default  reduce using rule 39 (openSelectStatement)


State 164

   33 stmt: closedStatement •
   40 openSelectStatement: IF exp THEN closedStatement • ELSE openStatement
   41 closedSelectStatement: IF exp THEN closedStatement • ELSE closedStatement

    ELSE  shift, and go to state 169

    $default  reduce using rule 33 (stmt)


State 165

   53 openItrStmt: WHILE simpleExp DO openStatement •

    $default  reduce using rule 53 (openItrStmt)


State 166

   55 closedItrStmt: WHILE simpleExp DO closedStatement •

    $default  reduce using rule 55 (closedItrStmt)


State 167

   54 openItrStmt: FOR ID ASSIGN itrRange • DO openStatement
   56 closedItrStmt: FOR ID ASSIGN itrRange • DO closedStatement

    DO  shift, and go to state 170


State 168

   57 itrRange: simpleExp • TO simpleExp
   58         | simpleExp • TO simpleExp BY simpleExp
   71 simpleExp: simpleExp • OR andExp

    TO  shift, and go to state 171
    OR  shift, and go to state 73


State 169

   40 openSelectStatement: IF exp THEN closedStatement ELSE • openStatement
   41 closedSelectStatement: IF exp THEN closedStatement ELSE • closedStatement

    ID           shift, and go to state 35
    NUMCONST     shift, and go to state 36
    CHARCONST    shift, and go to state 37
    STRINGCONST  shift, and go to state 38
    BOOLCONST    shift, and go to state 39
    IF           shift, and go to state 129
    WHILE        shift, and go to state 130
    FOR          shift, and go to state 131
    RETURN       shift, and go to state 132
    BREAK        shift, and go to state 133
    NOT          shift, and go to state 40
    SEMI         shift, and go to state 134
    LCURL        shift, and go to state 92
    SUB          shift, and go to state 41
    MUL          shift, and go to state 42
    QMARK        shift, and go to state 43
    LPAREN       shift, and go to state 44

    openStatement          go to state 172
    closedStatement        go to state 173
    openSelectStatement    go to state 139
    closedSelectStatement  go to state 140
    simpleStatement        go to state 141
    expStmt                go to state 142
    compoundStmt           go to state 143
    openItrStmt            go to state 144
    closedItrStmt          go to state 145
    returnStmt             go to state 146
    breakStmt              go to state 147
    exp                    go to state 148
    simpleExp              go to state 71
    andExp                 go to state 46
    unaryRelExp            go to state 47
    relExp                 go to state 48
    sumExp                 go to state 49
    mulExp                 go to state 50
    unaryExp               go to state 51
    unaryOp                go to state 52
    chsign                 go to state 53
    sizeof                 go to state 54
    factor                 go to state 55
    mutable                go to state 72
    immutable              go to state 57
    call                   go to state 58
    constant               go to state 59


State 170

   54 openItrStmt: FOR ID ASSIGN itrRange DO • openStatement
   56 closedItrStmt: FOR ID ASSIGN itrRange DO • closedStatement

    ID           shift, and go to state 35
    NUMCONST     shift, and go to state 36
    CHARCONST    shift, and go to state 37
    STRINGCONST  shift, and go to state 38
    BOOLCONST    shift, and go to state 39
    IF           shift, and go to state 129
    WHILE        shift, and go to state 130
    FOR          shift, and go to state 131
    RETURN       shift, and go to state 132
    BREAK        shift, and go to state 133
    NOT          shift, and go to state 40
    SEMI         shift, and go to state 134
    LCURL        shift, and go to state 92
    SUB          shift, and go to state 41
    MUL          shift, and go to state 42
    QMARK        shift, and go to state 43
    LPAREN       shift, and go to state 44

    openStatement          go to state 174
    closedStatement        go to state 175
    openSelectStatement    go to state 139
    closedSelectStatement  go to state 140
    simpleStatement        go to state 141
    expStmt                go to state 142
    compoundStmt           go to state 143
    openItrStmt            go to state 144
    closedItrStmt          go to state 145
    returnStmt             go to state 146
    breakStmt              go to state 147
    exp                    go to state 148
    simpleExp              go to state 71
    andExp                 go to state 46
    unaryRelExp            go to state 47
    relExp                 go to state 48
    sumExp                 go to state 49
    mulExp                 go to state 50
    unaryExp               go to state 51
    unaryOp                go to state 52
    chsign                 go to state 53
    sizeof                 go to state 54
    factor                 go to state 55
    mutable                go to state 72
    immutable              go to state 57
    call                   go to state 58
    constant               go to state 59


State 171

   57 itrRange: simpleExp TO • simpleExp
   58         | simpleExp TO • simpleExp BY simpleExp

    ID           shift, and go to state 35
    NUMCONST     shift, and go to state 36
    CHARCONST    shift, and go to state 37
    STRINGCONST  shift, and go to state 38
    BOOLCONST    shift, and go to state 39
    NOT          shift, and go to state 40
    SUB          shift, and go to state 41
    MUL          shift, and go to state 42
    QMARK        shift, and go to state 43
    LPAREN       shift, and go to state 44

    simpleExp    go to state 176
    andExp       go to state 46
    unaryRelExp  go to state 47
    relExp       go to state 48
    sumExp       go to state 49
    mulExp       go to state 50
    unaryExp     go to state 51
    unaryOp      go to state 52
    chsign       go to state 53
    sizeof       go to state 54
    factor       go to state 55
    mutable      go to state 56
    immutable    go to state 57
    call         go to state 58
    constant     go to state 59


State 172

   40 openSelectStatement: IF exp THEN closedStatement ELSE openStatement •

    $default  reduce using rule 40 (openSelectStatement)


State 173

   41 closedSelectStatement: IF exp THEN closedStatement ELSE closedStatement •

    $default  reduce using rule 41 (closedSelectStatement)


State 174

   54 openItrStmt: FOR ID ASSIGN itrRange DO openStatement •

    $default  reduce using rule 54 (openItrStmt)


State 175

   56 closedItrStmt: FOR ID ASSIGN itrRange DO closedStatement •

    $default  reduce using rule 56 (closedItrStmt)


State 176

   57 itrRange: simpleExp TO simpleExp •
   58         | simpleExp TO simpleExp • BY simpleExp
   71 simpleExp: simpleExp • OR andExp

    BY  shift, and go to state 177
    OR  shift, and go to state 73

    $default  reduce using rule 57 (itrRange)


State 177

   58 itrRange: simpleExp TO simpleExp BY • simpleExp

    ID           shift, and go to state 35
    NUMCONST     shift, and go to state 36
    CHARCONST    shift, and go to state 37
    STRINGCONST  shift, and go to state 38
    BOOLCONST    shift, and go to state 39
    NOT          shift, and go to state 40
    SUB          shift, and go to state 41
    MUL          shift, and go to state 42
    QMARK        shift, and go to state 43
    LPAREN       shift, and go to state 44

    simpleExp    go to state 178
    andExp       go to state 46
    unaryRelExp  go to state 47
    relExp       go to state 48
    sumExp       go to state 49
    mulExp       go to state 50
    unaryExp     go to state 51
    unaryOp      go to state 52
    chsign       go to state 53
    sizeof       go to state 54
    factor       go to state 55
    mutable      go to state 56
    immutable    go to state 57
    call         go to state 58
    constant     go to state 59


State 178

   58 itrRange: simpleExp TO simpleExp BY simpleExp •
   71 simpleExp: simpleExp • OR andExp

    OR  shift, and go to state 73

    $default  reduce using rule 58 (itrRange)
