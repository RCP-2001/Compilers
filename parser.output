State 36 conflicts: 1 shift/reduce
State 106 conflicts: 1 shift/reduce
State 128 conflicts: 18 reduce/reduce
State 129 conflicts: 18 reduce/reduce
State 133 conflicts: 18 reduce/reduce
State 134 conflicts: 18 reduce/reduce
State 135 conflicts: 18 reduce/reduce
State 161 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declist

    2 declist: declist decl
    3        | decl

    4 decl: varDecl
    5     | funDecl

    6 varDecl: typeSpec varDeclList SEMI

    7 scopedVarDecl: STATIC typeSpec varDecl SEMI
    8              | typeSpec varDeclList SEMI

    9 varDeclList: varDeclList COMMA varDeclInit
   10            | varDeclInit

   11 varDeclInit: varDeclID
   12            | varDeclID COLON simpleExp

   13 varDeclID: ID
   14          | ID LBRACK NUMCONST RBRACK

   15 typeSpec: INT
   16         | BOOL
   17         | CHAR

   18 funDecl: typeSpec ID LPAREN params RPAREN compoundStmt
   19        | ID LPAREN params RPAREN compoundStmt

   20 params: paramList
   21       | ε

   22 paramList: paramList SEMI paramTypeList
   23          | paramTypeList

   24 paramTypeList: typeSpec paramIDList

   25 paramIDList: paramIDList COMMA paramID
   26            | paramID

   27 paramID: ID
   28        | ID LBRACK RBRACK

   29 stmt: expStmt
   30     | compoundStmt
   31     | selectStmt
   32     | itrStmt
   33     | returnStmt
   34     | breakStmt

   35 expStmt: exp COLON

   36 compoundStmt: LCURL LocalDecls stmtList RCURL

   37 LocalDecls: LocalDecls scopedVarDecl
   38           | ε

   39 stmtList: stmtList stmt
   40         | ε

   41 selectStmt: matchedIf
   42           | unmatchedIf

   43 matchedIf: IF RPAREN simpleExp LPAREN THEN matchedIf ELSE matchedIf
   44          | expStmt
   45          | compoundStmt
   46          | itrStmt
   47          | returnStmt
   48          | breakStmt

   49 unmatchedIf: IF RPAREN simpleExp LPAREN THEN stmt
   50            | IF RPAREN simpleExp LPAREN THEN matchedIf ELSE unmatchedIf

   51 itrStmt: WHILE simpleExp DO stmt
   52        | FOR ID EQ itrRange DO stmt

   53 itrRange: simpleExp TO simpleExp
   54         | simpleExp TO simpleExp BY simpleExp

   55 returnStmt: RETURN SEMI
   56           | RETURN exp SEMI

   57 breakStmt: BREAK SEMI

   58 exp: mutable assignop exp
   59    | mutable INC
   60    | mutable DEC
   61    | simpleExp

   62 assignop: ASSIGN
   63         | ADDASS
   64         | DECASS
   65         | MULASS
   66         | DIVASS

   67 simpleExp: simpleExp OR simpleExp
   68          | andExp

   69 andExp: andExp AND unaryRelExp
   70       | unaryRelExp

   71 unaryRelExp: NOT unaryRelExp
   72            | relExp

   73 relExp: sumExp relop sumExp
   74       | sumExp

   75 relop: LESS
   76      | LEQ
   77      | GREATER
   78      | GEQ
   79      | EQ
   80      | NEQ

   81 sumExp: sumExp sumop mulExp
   82       | mulExp

   83 sumop: ADD
   84      | SUB

   85 mulExp: mulExp mulop unaryExp
   86       | unaryExp

   87 mulop: MUL
   88      | DIV
   89      | MOD

   90 unaryExp: unaryOp unaryExp
   91         | factor

   92 unaryOp: SUB
   93        | MUL
   94        | QMARK

   95 factor: mutable
   96       | immutable

   97 mutable: ID
   98        | ID LBRACK exp RBRACK

   99 immutable: LPAREN exp RPAREN
  100          | call
  101          | constant

  102 call: ID LPAREN args RPAREN

  103 args: argList
  104     | ε

  105 argList: argList COMMA exp
  106        | exp

  107 constant: NUMCONST
  108         | CHARCONST
  109         | STRINGCONST
  110         | BOOLCONST


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <tokenData> (258) 13 14 18 19 27 28 52 97 98 102
    NUMCONST <tokenData> (259) 14 107
    CHARCONST <tokenData> (260) 108
    STRINGCONST <tokenData> (261) 109
    BOOLCONST <tokenData> (262) 110
    BOOL <tokenData> (263) 16
    INT <tokenData> (264) 15
    CHAR <tokenData> (265) 17
    IF <tokenData> (266) 43 49 50
    THEN <tokenData> (267) 43 49 50
    ELSE <tokenData> (268) 43 50
    WHILE <tokenData> (269) 51
    FOR <tokenData> (270) 52
    DO <tokenData> (271) 51 52
    TO <tokenData> (272) 53 54
    BY <tokenData> (273) 54
    RETURN <tokenData> (274) 55 56
    BREAK <tokenData> (275) 57
    OR <tokenData> (276) 67
    AND <tokenData> (277) 69
    NOT <tokenData> (278) 71
    STATIC <tokenData> (279) 7
    SEMI <tokenData> (280) 6 7 8 22 55 56 57
    COMMA <tokenData> (281) 9 25 105
    COLON <tokenData> (282) 12 35
    LBRACK <tokenData> (283) 14 28 98
    RBRACK <tokenData> (284) 14 28 98
    LCURL <tokenData> (285) 36
    RCURL <tokenData> (286) 36
    INC <tokenData> (287) 59
    DEC <tokenData> (288) 60
    ADDASS <tokenData> (289) 63
    DECASS <tokenData> (290) 64
    MULASS <tokenData> (291) 65
    DIVASS <tokenData> (292) 66
    LEQ <tokenData> (293) 76
    GEQ <tokenData> (294) 78
    LESS <tokenData> (295) 75
    GREATER <tokenData> (296) 77
    EQ <tokenData> (297) 52 79
    NEQ <tokenData> (298) 80
    ADD <tokenData> (299) 83
    SUB <tokenData> (300) 84 92
    MUL <tokenData> (301) 87 93
    DIV <tokenData> (302) 88
    MOD <tokenData> (303) 89
    QMARK <tokenData> (304) 94
    ASSIGN <tokenData> (305) 62
    LPAREN <tokenData> (306) 18 19 43 49 50 99 102
    RPAREN <tokenData> (307) 18 19 43 49 50 99 102


Nonterminals, with rules where they appear

    $accept (53)
        on left: 0
    program (54)
        on left: 1
        on right: 0
    declist <tokenData> (55)
        on left: 2 3
        on right: 1 2
    decl <tokenData> (56)
        on left: 4 5
        on right: 2 3
    varDecl <tokenData> (57)
        on left: 6
        on right: 4 7
    scopedVarDecl <tokenData> (58)
        on left: 7 8
        on right: 37
    varDeclList <tokenData> (59)
        on left: 9 10
        on right: 6 8 9
    varDeclInit <tokenData> (60)
        on left: 11 12
        on right: 9 10
    varDeclID <tokenData> (61)
        on left: 13 14
        on right: 11 12
    typeSpec <tokenData> (62)
        on left: 15 16 17
        on right: 6 7 8 18 24
    funDecl <tokenData> (63)
        on left: 18 19
        on right: 5
    params <tokenData> (64)
        on left: 20 21
        on right: 18 19
    paramList <tokenData> (65)
        on left: 22 23
        on right: 20 22
    paramTypeList (66)
        on left: 24
        on right: 22 23
    paramIDList (67)
        on left: 25 26
        on right: 24 25
    paramID (68)
        on left: 27 28
        on right: 25 26
    stmt <tokenData> (69)
        on left: 29 30 31 32 33 34
        on right: 39 49 51 52
    expStmt <tokenData> (70)
        on left: 35
        on right: 29 44
    compoundStmt <tokenData> (71)
        on left: 36
        on right: 18 19 30 45
    LocalDecls <tokenData> (72)
        on left: 37 38
        on right: 36 37
    stmtList <tokenData> (73)
        on left: 39 40
        on right: 36 39
    selectStmt <tokenData> (74)
        on left: 41 42
        on right: 31
    matchedIf <tokenData> (75)
        on left: 43 44 45 46 47 48
        on right: 41 43 50
    unmatchedIf <tokenData> (76)
        on left: 49 50
        on right: 42 50
    itrStmt <tokenData> (77)
        on left: 51 52
        on right: 32 46
    itrRange <tokenData> (78)
        on left: 53 54
        on right: 52
    returnStmt <tokenData> (79)
        on left: 55 56
        on right: 33 47
    breakStmt <tokenData> (80)
        on left: 57
        on right: 34 48
    exp <tokenData> (81)
        on left: 58 59 60 61
        on right: 35 56 58 98 99 105 106
    assignop (82)
        on left: 62 63 64 65 66
        on right: 58
    simpleExp <tokenData> (83)
        on left: 67 68
        on right: 12 43 49 50 51 53 54 61 67
    andExp <tokenData> (84)
        on left: 69 70
        on right: 68 69
    unaryRelExp <tokenData> (85)
        on left: 71 72
        on right: 69 70 71
    relExp <tokenData> (86)
        on left: 73 74
        on right: 72
    relop <tokenData> (87)
        on left: 75 76 77 78 79 80
        on right: 73
    sumExp <tokenData> (88)
        on left: 81 82
        on right: 73 74 81
    sumop <tokenData> (89)
        on left: 83 84
        on right: 81
    mulExp <tokenData> (90)
        on left: 85 86
        on right: 81 82 85
    mulop <tokenData> (91)
        on left: 87 88 89
        on right: 85
    unaryExp <tokenData> (92)
        on left: 90 91
        on right: 85 86 90
    unaryOp <tokenData> (93)
        on left: 92 93 94
        on right: 90
    factor <tokenData> (94)
        on left: 95 96
        on right: 91
    mutable <tokenData> (95)
        on left: 97 98
        on right: 58 59 60 95
    immutable <tokenData> (96)
        on left: 99 100 101
        on right: 96
    call <tokenData> (97)
        on left: 102
        on right: 100
    args <tokenData> (98)
        on left: 103 104
        on right: 102
    argList <tokenData> (99)
        on left: 105 106
        on right: 103 105
    constant <tokenData> (100)
        on left: 107 108 109 110
        on right: 101


State 0

    0 $accept: • program $end

    ID    shift, and go to state 1
    BOOL  shift, and go to state 2
    INT   shift, and go to state 3
    CHAR  shift, and go to state 4

    program   go to state 5
    declist   go to state 6
    decl      go to state 7
    varDecl   go to state 8
    typeSpec  go to state 9
    funDecl   go to state 10


State 1

   19 funDecl: ID • LPAREN params RPAREN compoundStmt

    LPAREN  shift, and go to state 11


State 2

   16 typeSpec: BOOL •

    $default  reduce using rule 16 (typeSpec)


State 3

   15 typeSpec: INT •

    $default  reduce using rule 15 (typeSpec)


State 4

   17 typeSpec: CHAR •

    $default  reduce using rule 17 (typeSpec)


State 5

    0 $accept: program • $end

    $end  shift, and go to state 12


State 6

    1 program: declist •
    2 declist: declist • decl

    ID    shift, and go to state 1
    BOOL  shift, and go to state 2
    INT   shift, and go to state 3
    CHAR  shift, and go to state 4

    $default  reduce using rule 1 (program)

    decl      go to state 13
    varDecl   go to state 8
    typeSpec  go to state 9
    funDecl   go to state 10


State 7

    3 declist: decl •

    $default  reduce using rule 3 (declist)


State 8

    4 decl: varDecl •

    $default  reduce using rule 4 (decl)


State 9

    6 varDecl: typeSpec • varDeclList SEMI
   18 funDecl: typeSpec • ID LPAREN params RPAREN compoundStmt

    ID  shift, and go to state 14

    varDeclList  go to state 15
    varDeclInit  go to state 16
    varDeclID    go to state 17


State 10

    5 decl: funDecl •

    $default  reduce using rule 5 (decl)


State 11

   19 funDecl: ID LPAREN • params RPAREN compoundStmt

    BOOL  shift, and go to state 2
    INT   shift, and go to state 3
    CHAR  shift, and go to state 4

    $default  reduce using rule 21 (params)

    typeSpec       go to state 18
    params         go to state 19
    paramList      go to state 20
    paramTypeList  go to state 21


State 12

    0 $accept: program $end •

    $default  accept


State 13

    2 declist: declist decl •

    $default  reduce using rule 2 (declist)


State 14

   13 varDeclID: ID •
   14          | ID • LBRACK NUMCONST RBRACK
   18 funDecl: typeSpec ID • LPAREN params RPAREN compoundStmt

    LBRACK  shift, and go to state 22
    LPAREN  shift, and go to state 23

    $default  reduce using rule 13 (varDeclID)


State 15

    6 varDecl: typeSpec varDeclList • SEMI
    9 varDeclList: varDeclList • COMMA varDeclInit

    SEMI   shift, and go to state 24
    COMMA  shift, and go to state 25


State 16

   10 varDeclList: varDeclInit •

    $default  reduce using rule 10 (varDeclList)


State 17

   11 varDeclInit: varDeclID •
   12            | varDeclID • COLON simpleExp

    COLON  shift, and go to state 26

    $default  reduce using rule 11 (varDeclInit)


State 18

   24 paramTypeList: typeSpec • paramIDList

    ID  shift, and go to state 27

    paramIDList  go to state 28
    paramID      go to state 29


State 19

   19 funDecl: ID LPAREN params • RPAREN compoundStmt

    RPAREN  shift, and go to state 30


State 20

   20 params: paramList •
   22 paramList: paramList • SEMI paramTypeList

    SEMI  shift, and go to state 31

    $default  reduce using rule 20 (params)


State 21

   23 paramList: paramTypeList •

    $default  reduce using rule 23 (paramList)


State 22

   14 varDeclID: ID LBRACK • NUMCONST RBRACK

    NUMCONST  shift, and go to state 32


State 23

   18 funDecl: typeSpec ID LPAREN • params RPAREN compoundStmt

    BOOL  shift, and go to state 2
    INT   shift, and go to state 3
    CHAR  shift, and go to state 4

    $default  reduce using rule 21 (params)

    typeSpec       go to state 18
    params         go to state 33
    paramList      go to state 20
    paramTypeList  go to state 21


State 24

    6 varDecl: typeSpec varDeclList SEMI •

    $default  reduce using rule 6 (varDecl)


State 25

    9 varDeclList: varDeclList COMMA • varDeclInit

    ID  shift, and go to state 34

    varDeclInit  go to state 35
    varDeclID    go to state 17


State 26

   12 varDeclInit: varDeclID COLON • simpleExp

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    NOT          shift, and go to state 41
    SUB          shift, and go to state 42
    MUL          shift, and go to state 43
    QMARK        shift, and go to state 44
    LPAREN       shift, and go to state 45

    simpleExp    go to state 46
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryOp      go to state 53
    factor       go to state 54
    mutable      go to state 55
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 27

   27 paramID: ID •
   28        | ID • LBRACK RBRACK

    LBRACK  shift, and go to state 59

    $default  reduce using rule 27 (paramID)


State 28

   24 paramTypeList: typeSpec paramIDList •
   25 paramIDList: paramIDList • COMMA paramID

    COMMA  shift, and go to state 60

    $default  reduce using rule 24 (paramTypeList)


State 29

   26 paramIDList: paramID •

    $default  reduce using rule 26 (paramIDList)


State 30

   19 funDecl: ID LPAREN params RPAREN • compoundStmt

    LCURL  shift, and go to state 61

    compoundStmt  go to state 62


State 31

   22 paramList: paramList SEMI • paramTypeList

    BOOL  shift, and go to state 2
    INT   shift, and go to state 3
    CHAR  shift, and go to state 4

    typeSpec       go to state 18
    paramTypeList  go to state 63


State 32

   14 varDeclID: ID LBRACK NUMCONST • RBRACK

    RBRACK  shift, and go to state 64


State 33

   18 funDecl: typeSpec ID LPAREN params • RPAREN compoundStmt

    RPAREN  shift, and go to state 65


State 34

   13 varDeclID: ID •
   14          | ID • LBRACK NUMCONST RBRACK

    LBRACK  shift, and go to state 22

    $default  reduce using rule 13 (varDeclID)


State 35

    9 varDeclList: varDeclList COMMA varDeclInit •

    $default  reduce using rule 9 (varDeclList)


State 36

   97 mutable: ID •
   98        | ID • LBRACK exp RBRACK
  102 call: ID • LPAREN args RPAREN

    LBRACK  shift, and go to state 66
    LPAREN  shift, and go to state 67

    LPAREN    [reduce using rule 97 (mutable)]
    $default  reduce using rule 97 (mutable)


State 37

  107 constant: NUMCONST •

    $default  reduce using rule 107 (constant)


State 38

  108 constant: CHARCONST •

    $default  reduce using rule 108 (constant)


State 39

  109 constant: STRINGCONST •

    $default  reduce using rule 109 (constant)


State 40

  110 constant: BOOLCONST •

    $default  reduce using rule 110 (constant)


State 41

   71 unaryRelExp: NOT • unaryRelExp

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    NOT          shift, and go to state 41
    SUB          shift, and go to state 42
    MUL          shift, and go to state 43
    QMARK        shift, and go to state 44
    LPAREN       shift, and go to state 45

    unaryRelExp  go to state 68
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryOp      go to state 53
    factor       go to state 54
    mutable      go to state 55
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 42

   92 unaryOp: SUB •

    $default  reduce using rule 92 (unaryOp)


State 43

   93 unaryOp: MUL •

    $default  reduce using rule 93 (unaryOp)


State 44

   94 unaryOp: QMARK •

    $default  reduce using rule 94 (unaryOp)


State 45

   99 immutable: LPAREN • exp RPAREN

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    NOT          shift, and go to state 41
    SUB          shift, and go to state 42
    MUL          shift, and go to state 43
    QMARK        shift, and go to state 44
    LPAREN       shift, and go to state 45

    exp          go to state 69
    simpleExp    go to state 70
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryOp      go to state 53
    factor       go to state 54
    mutable      go to state 71
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 46

   12 varDeclInit: varDeclID COLON simpleExp •
   67 simpleExp: simpleExp • OR simpleExp

    OR  shift, and go to state 72

    $default  reduce using rule 12 (varDeclInit)


State 47

   68 simpleExp: andExp •
   69 andExp: andExp • AND unaryRelExp

    AND  shift, and go to state 73

    $default  reduce using rule 68 (simpleExp)


State 48

   70 andExp: unaryRelExp •

    $default  reduce using rule 70 (andExp)


State 49

   72 unaryRelExp: relExp •

    $default  reduce using rule 72 (unaryRelExp)


State 50

   73 relExp: sumExp • relop sumExp
   74       | sumExp •
   81 sumExp: sumExp • sumop mulExp

    LEQ      shift, and go to state 74
    GEQ      shift, and go to state 75
    LESS     shift, and go to state 76
    GREATER  shift, and go to state 77
    EQ       shift, and go to state 78
    NEQ      shift, and go to state 79
    ADD      shift, and go to state 80
    SUB      shift, and go to state 81

    $default  reduce using rule 74 (relExp)

    relop  go to state 82
    sumop  go to state 83


State 51

   82 sumExp: mulExp •
   85 mulExp: mulExp • mulop unaryExp

    MUL  shift, and go to state 84
    DIV  shift, and go to state 85
    MOD  shift, and go to state 86

    $default  reduce using rule 82 (sumExp)

    mulop  go to state 87


State 52

   86 mulExp: unaryExp •

    $default  reduce using rule 86 (mulExp)


State 53

   90 unaryExp: unaryOp • unaryExp

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    SUB          shift, and go to state 42
    MUL          shift, and go to state 43
    QMARK        shift, and go to state 44
    LPAREN       shift, and go to state 45

    unaryExp   go to state 88
    unaryOp    go to state 53
    factor     go to state 54
    mutable    go to state 55
    immutable  go to state 56
    call       go to state 57
    constant   go to state 58


State 54

   91 unaryExp: factor •

    $default  reduce using rule 91 (unaryExp)


State 55

   95 factor: mutable •

    $default  reduce using rule 95 (factor)


State 56

   96 factor: immutable •

    $default  reduce using rule 96 (factor)


State 57

  100 immutable: call •

    $default  reduce using rule 100 (immutable)


State 58

  101 immutable: constant •

    $default  reduce using rule 101 (immutable)


State 59

   28 paramID: ID LBRACK • RBRACK

    RBRACK  shift, and go to state 89


State 60

   25 paramIDList: paramIDList COMMA • paramID

    ID  shift, and go to state 27

    paramID  go to state 90


State 61

   36 compoundStmt: LCURL • LocalDecls stmtList RCURL

    $default  reduce using rule 38 (LocalDecls)

    LocalDecls  go to state 91


State 62

   19 funDecl: ID LPAREN params RPAREN compoundStmt •

    $default  reduce using rule 19 (funDecl)


State 63

   22 paramList: paramList SEMI paramTypeList •

    $default  reduce using rule 22 (paramList)


State 64

   14 varDeclID: ID LBRACK NUMCONST RBRACK •

    $default  reduce using rule 14 (varDeclID)


State 65

   18 funDecl: typeSpec ID LPAREN params RPAREN • compoundStmt

    LCURL  shift, and go to state 61

    compoundStmt  go to state 92


State 66

   98 mutable: ID LBRACK • exp RBRACK

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    NOT          shift, and go to state 41
    SUB          shift, and go to state 42
    MUL          shift, and go to state 43
    QMARK        shift, and go to state 44
    LPAREN       shift, and go to state 45

    exp          go to state 93
    simpleExp    go to state 70
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryOp      go to state 53
    factor       go to state 54
    mutable      go to state 71
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 67

  102 call: ID LPAREN • args RPAREN

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    NOT          shift, and go to state 41
    SUB          shift, and go to state 42
    MUL          shift, and go to state 43
    QMARK        shift, and go to state 44
    LPAREN       shift, and go to state 45

    $default  reduce using rule 104 (args)

    exp          go to state 94
    simpleExp    go to state 70
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryOp      go to state 53
    factor       go to state 54
    mutable      go to state 71
    immutable    go to state 56
    call         go to state 57
    args         go to state 95
    argList      go to state 96
    constant     go to state 58


State 68

   71 unaryRelExp: NOT unaryRelExp •

    $default  reduce using rule 71 (unaryRelExp)


State 69

   99 immutable: LPAREN exp • RPAREN

    RPAREN  shift, and go to state 97


State 70

   61 exp: simpleExp •
   67 simpleExp: simpleExp • OR simpleExp

    OR  shift, and go to state 72

    $default  reduce using rule 61 (exp)


State 71

   58 exp: mutable • assignop exp
   59    | mutable • INC
   60    | mutable • DEC
   95 factor: mutable •

    INC     shift, and go to state 98
    DEC     shift, and go to state 99
    ADDASS  shift, and go to state 100
    DECASS  shift, and go to state 101
    MULASS  shift, and go to state 102
    DIVASS  shift, and go to state 103
    ASSIGN  shift, and go to state 104

    $default  reduce using rule 95 (factor)

    assignop  go to state 105


State 72

   67 simpleExp: simpleExp OR • simpleExp

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    NOT          shift, and go to state 41
    SUB          shift, and go to state 42
    MUL          shift, and go to state 43
    QMARK        shift, and go to state 44
    LPAREN       shift, and go to state 45

    simpleExp    go to state 106
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryOp      go to state 53
    factor       go to state 54
    mutable      go to state 55
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 73

   69 andExp: andExp AND • unaryRelExp

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    NOT          shift, and go to state 41
    SUB          shift, and go to state 42
    MUL          shift, and go to state 43
    QMARK        shift, and go to state 44
    LPAREN       shift, and go to state 45

    unaryRelExp  go to state 107
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryOp      go to state 53
    factor       go to state 54
    mutable      go to state 55
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 74

   76 relop: LEQ •

    $default  reduce using rule 76 (relop)


State 75

   78 relop: GEQ •

    $default  reduce using rule 78 (relop)


State 76

   75 relop: LESS •

    $default  reduce using rule 75 (relop)


State 77

   77 relop: GREATER •

    $default  reduce using rule 77 (relop)


State 78

   79 relop: EQ •

    $default  reduce using rule 79 (relop)


State 79

   80 relop: NEQ •

    $default  reduce using rule 80 (relop)


State 80

   83 sumop: ADD •

    $default  reduce using rule 83 (sumop)


State 81

   84 sumop: SUB •

    $default  reduce using rule 84 (sumop)


State 82

   73 relExp: sumExp relop • sumExp

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    SUB          shift, and go to state 42
    MUL          shift, and go to state 43
    QMARK        shift, and go to state 44
    LPAREN       shift, and go to state 45

    sumExp     go to state 108
    mulExp     go to state 51
    unaryExp   go to state 52
    unaryOp    go to state 53
    factor     go to state 54
    mutable    go to state 55
    immutable  go to state 56
    call       go to state 57
    constant   go to state 58


State 83

   81 sumExp: sumExp sumop • mulExp

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    SUB          shift, and go to state 42
    MUL          shift, and go to state 43
    QMARK        shift, and go to state 44
    LPAREN       shift, and go to state 45

    mulExp     go to state 109
    unaryExp   go to state 52
    unaryOp    go to state 53
    factor     go to state 54
    mutable    go to state 55
    immutable  go to state 56
    call       go to state 57
    constant   go to state 58


State 84

   87 mulop: MUL •

    $default  reduce using rule 87 (mulop)


State 85

   88 mulop: DIV •

    $default  reduce using rule 88 (mulop)


State 86

   89 mulop: MOD •

    $default  reduce using rule 89 (mulop)


State 87

   85 mulExp: mulExp mulop • unaryExp

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    SUB          shift, and go to state 42
    MUL          shift, and go to state 43
    QMARK        shift, and go to state 44
    LPAREN       shift, and go to state 45

    unaryExp   go to state 110
    unaryOp    go to state 53
    factor     go to state 54
    mutable    go to state 55
    immutable  go to state 56
    call       go to state 57
    constant   go to state 58


State 88

   90 unaryExp: unaryOp unaryExp •

    $default  reduce using rule 90 (unaryExp)


State 89

   28 paramID: ID LBRACK RBRACK •

    $default  reduce using rule 28 (paramID)


State 90

   25 paramIDList: paramIDList COMMA paramID •

    $default  reduce using rule 25 (paramIDList)


State 91

   36 compoundStmt: LCURL LocalDecls • stmtList RCURL
   37 LocalDecls: LocalDecls • scopedVarDecl

    BOOL    shift, and go to state 2
    INT     shift, and go to state 3
    CHAR    shift, and go to state 4
    STATIC  shift, and go to state 111

    $default  reduce using rule 40 (stmtList)

    scopedVarDecl  go to state 112
    typeSpec       go to state 113
    stmtList       go to state 114


State 92

   18 funDecl: typeSpec ID LPAREN params RPAREN compoundStmt •

    $default  reduce using rule 18 (funDecl)


State 93

   98 mutable: ID LBRACK exp • RBRACK

    RBRACK  shift, and go to state 115


State 94

  106 argList: exp •

    $default  reduce using rule 106 (argList)


State 95

  102 call: ID LPAREN args • RPAREN

    RPAREN  shift, and go to state 116


State 96

  103 args: argList •
  105 argList: argList • COMMA exp

    COMMA  shift, and go to state 117

    $default  reduce using rule 103 (args)


State 97

   99 immutable: LPAREN exp RPAREN •

    $default  reduce using rule 99 (immutable)


State 98

   59 exp: mutable INC •

    $default  reduce using rule 59 (exp)


State 99

   60 exp: mutable DEC •

    $default  reduce using rule 60 (exp)


State 100

   63 assignop: ADDASS •

    $default  reduce using rule 63 (assignop)


State 101

   64 assignop: DECASS •

    $default  reduce using rule 64 (assignop)


State 102

   65 assignop: MULASS •

    $default  reduce using rule 65 (assignop)


State 103

   66 assignop: DIVASS •

    $default  reduce using rule 66 (assignop)


State 104

   62 assignop: ASSIGN •

    $default  reduce using rule 62 (assignop)


State 105

   58 exp: mutable assignop • exp

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    NOT          shift, and go to state 41
    SUB          shift, and go to state 42
    MUL          shift, and go to state 43
    QMARK        shift, and go to state 44
    LPAREN       shift, and go to state 45

    exp          go to state 118
    simpleExp    go to state 70
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryOp      go to state 53
    factor       go to state 54
    mutable      go to state 71
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 106

   67 simpleExp: simpleExp • OR simpleExp
   67          | simpleExp OR simpleExp •

    OR  shift, and go to state 72

    OR        [reduce using rule 67 (simpleExp)]
    $default  reduce using rule 67 (simpleExp)


State 107

   69 andExp: andExp AND unaryRelExp •

    $default  reduce using rule 69 (andExp)


State 108

   73 relExp: sumExp relop sumExp •
   81 sumExp: sumExp • sumop mulExp

    ADD  shift, and go to state 80
    SUB  shift, and go to state 81

    $default  reduce using rule 73 (relExp)

    sumop  go to state 83


State 109

   81 sumExp: sumExp sumop mulExp •
   85 mulExp: mulExp • mulop unaryExp

    MUL  shift, and go to state 84
    DIV  shift, and go to state 85
    MOD  shift, and go to state 86

    $default  reduce using rule 81 (sumExp)

    mulop  go to state 87


State 110

   85 mulExp: mulExp mulop unaryExp •

    $default  reduce using rule 85 (mulExp)


State 111

    7 scopedVarDecl: STATIC • typeSpec varDecl SEMI

    BOOL  shift, and go to state 2
    INT   shift, and go to state 3
    CHAR  shift, and go to state 4

    typeSpec  go to state 119


State 112

   37 LocalDecls: LocalDecls scopedVarDecl •

    $default  reduce using rule 37 (LocalDecls)


State 113

    8 scopedVarDecl: typeSpec • varDeclList SEMI

    ID  shift, and go to state 34

    varDeclList  go to state 120
    varDeclInit  go to state 16
    varDeclID    go to state 17


State 114

   36 compoundStmt: LCURL LocalDecls stmtList • RCURL
   39 stmtList: stmtList • stmt

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    IF           shift, and go to state 121
    WHILE        shift, and go to state 122
    FOR          shift, and go to state 123
    RETURN       shift, and go to state 124
    BREAK        shift, and go to state 125
    NOT          shift, and go to state 41
    LCURL        shift, and go to state 61
    RCURL        shift, and go to state 126
    SUB          shift, and go to state 42
    MUL          shift, and go to state 43
    QMARK        shift, and go to state 44
    LPAREN       shift, and go to state 45

    stmt          go to state 127
    expStmt       go to state 128
    compoundStmt  go to state 129
    selectStmt    go to state 130
    matchedIf     go to state 131
    unmatchedIf   go to state 132
    itrStmt       go to state 133
    returnStmt    go to state 134
    breakStmt     go to state 135
    exp           go to state 136
    simpleExp     go to state 70
    andExp        go to state 47
    unaryRelExp   go to state 48
    relExp        go to state 49
    sumExp        go to state 50
    mulExp        go to state 51
    unaryExp      go to state 52
    unaryOp       go to state 53
    factor        go to state 54
    mutable       go to state 71
    immutable     go to state 56
    call          go to state 57
    constant      go to state 58


State 115

   98 mutable: ID LBRACK exp RBRACK •

    $default  reduce using rule 98 (mutable)


State 116

  102 call: ID LPAREN args RPAREN •

    $default  reduce using rule 102 (call)


State 117

  105 argList: argList COMMA • exp

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    NOT          shift, and go to state 41
    SUB          shift, and go to state 42
    MUL          shift, and go to state 43
    QMARK        shift, and go to state 44
    LPAREN       shift, and go to state 45

    exp          go to state 137
    simpleExp    go to state 70
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryOp      go to state 53
    factor       go to state 54
    mutable      go to state 71
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 118

   58 exp: mutable assignop exp •

    $default  reduce using rule 58 (exp)


State 119

    7 scopedVarDecl: STATIC typeSpec • varDecl SEMI

    BOOL  shift, and go to state 2
    INT   shift, and go to state 3
    CHAR  shift, and go to state 4

    varDecl   go to state 138
    typeSpec  go to state 139


State 120

    8 scopedVarDecl: typeSpec varDeclList • SEMI
    9 varDeclList: varDeclList • COMMA varDeclInit

    SEMI   shift, and go to state 140
    COMMA  shift, and go to state 25


State 121

   43 matchedIf: IF • RPAREN simpleExp LPAREN THEN matchedIf ELSE matchedIf
   49 unmatchedIf: IF • RPAREN simpleExp LPAREN THEN stmt
   50            | IF • RPAREN simpleExp LPAREN THEN matchedIf ELSE unmatchedIf

    RPAREN  shift, and go to state 141


State 122

   51 itrStmt: WHILE • simpleExp DO stmt

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    NOT          shift, and go to state 41
    SUB          shift, and go to state 42
    MUL          shift, and go to state 43
    QMARK        shift, and go to state 44
    LPAREN       shift, and go to state 45

    simpleExp    go to state 142
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryOp      go to state 53
    factor       go to state 54
    mutable      go to state 55
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 123

   52 itrStmt: FOR • ID EQ itrRange DO stmt

    ID  shift, and go to state 143


State 124

   55 returnStmt: RETURN • SEMI
   56           | RETURN • exp SEMI

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    NOT          shift, and go to state 41
    SEMI         shift, and go to state 144
    SUB          shift, and go to state 42
    MUL          shift, and go to state 43
    QMARK        shift, and go to state 44
    LPAREN       shift, and go to state 45

    exp          go to state 145
    simpleExp    go to state 70
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryOp      go to state 53
    factor       go to state 54
    mutable      go to state 71
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 125

   57 breakStmt: BREAK • SEMI

    SEMI  shift, and go to state 146


State 126

   36 compoundStmt: LCURL LocalDecls stmtList RCURL •

    $default  reduce using rule 36 (compoundStmt)


State 127

   39 stmtList: stmtList stmt •

    $default  reduce using rule 39 (stmtList)


State 128

   29 stmt: expStmt •
   44 matchedIf: expStmt •

    ID           reduce using rule 29 (stmt)
    ID           [reduce using rule 44 (matchedIf)]
    NUMCONST     reduce using rule 29 (stmt)
    NUMCONST     [reduce using rule 44 (matchedIf)]
    CHARCONST    reduce using rule 29 (stmt)
    CHARCONST    [reduce using rule 44 (matchedIf)]
    STRINGCONST  reduce using rule 29 (stmt)
    STRINGCONST  [reduce using rule 44 (matchedIf)]
    BOOLCONST    reduce using rule 29 (stmt)
    BOOLCONST    [reduce using rule 44 (matchedIf)]
    IF           reduce using rule 29 (stmt)
    IF           [reduce using rule 44 (matchedIf)]
    ELSE         reduce using rule 29 (stmt)
    ELSE         [reduce using rule 44 (matchedIf)]
    WHILE        reduce using rule 29 (stmt)
    WHILE        [reduce using rule 44 (matchedIf)]
    FOR          reduce using rule 29 (stmt)
    FOR          [reduce using rule 44 (matchedIf)]
    RETURN       reduce using rule 29 (stmt)
    RETURN       [reduce using rule 44 (matchedIf)]
    BREAK        reduce using rule 29 (stmt)
    BREAK        [reduce using rule 44 (matchedIf)]
    NOT          reduce using rule 29 (stmt)
    NOT          [reduce using rule 44 (matchedIf)]
    LCURL        reduce using rule 29 (stmt)
    LCURL        [reduce using rule 44 (matchedIf)]
    RCURL        reduce using rule 29 (stmt)
    RCURL        [reduce using rule 44 (matchedIf)]
    SUB          reduce using rule 29 (stmt)
    SUB          [reduce using rule 44 (matchedIf)]
    MUL          reduce using rule 29 (stmt)
    MUL          [reduce using rule 44 (matchedIf)]
    QMARK        reduce using rule 29 (stmt)
    QMARK        [reduce using rule 44 (matchedIf)]
    LPAREN       reduce using rule 29 (stmt)
    LPAREN       [reduce using rule 44 (matchedIf)]
    $default     reduce using rule 29 (stmt)


State 129

   30 stmt: compoundStmt •
   45 matchedIf: compoundStmt •

    ID           reduce using rule 30 (stmt)
    ID           [reduce using rule 45 (matchedIf)]
    NUMCONST     reduce using rule 30 (stmt)
    NUMCONST     [reduce using rule 45 (matchedIf)]
    CHARCONST    reduce using rule 30 (stmt)
    CHARCONST    [reduce using rule 45 (matchedIf)]
    STRINGCONST  reduce using rule 30 (stmt)
    STRINGCONST  [reduce using rule 45 (matchedIf)]
    BOOLCONST    reduce using rule 30 (stmt)
    BOOLCONST    [reduce using rule 45 (matchedIf)]
    IF           reduce using rule 30 (stmt)
    IF           [reduce using rule 45 (matchedIf)]
    ELSE         reduce using rule 30 (stmt)
    ELSE         [reduce using rule 45 (matchedIf)]
    WHILE        reduce using rule 30 (stmt)
    WHILE        [reduce using rule 45 (matchedIf)]
    FOR          reduce using rule 30 (stmt)
    FOR          [reduce using rule 45 (matchedIf)]
    RETURN       reduce using rule 30 (stmt)
    RETURN       [reduce using rule 45 (matchedIf)]
    BREAK        reduce using rule 30 (stmt)
    BREAK        [reduce using rule 45 (matchedIf)]
    NOT          reduce using rule 30 (stmt)
    NOT          [reduce using rule 45 (matchedIf)]
    LCURL        reduce using rule 30 (stmt)
    LCURL        [reduce using rule 45 (matchedIf)]
    RCURL        reduce using rule 30 (stmt)
    RCURL        [reduce using rule 45 (matchedIf)]
    SUB          reduce using rule 30 (stmt)
    SUB          [reduce using rule 45 (matchedIf)]
    MUL          reduce using rule 30 (stmt)
    MUL          [reduce using rule 45 (matchedIf)]
    QMARK        reduce using rule 30 (stmt)
    QMARK        [reduce using rule 45 (matchedIf)]
    LPAREN       reduce using rule 30 (stmt)
    LPAREN       [reduce using rule 45 (matchedIf)]
    $default     reduce using rule 30 (stmt)


State 130

   31 stmt: selectStmt •

    $default  reduce using rule 31 (stmt)


State 131

   41 selectStmt: matchedIf •

    $default  reduce using rule 41 (selectStmt)


State 132

   42 selectStmt: unmatchedIf •

    $default  reduce using rule 42 (selectStmt)


State 133

   32 stmt: itrStmt •
   46 matchedIf: itrStmt •

    ID           reduce using rule 32 (stmt)
    ID           [reduce using rule 46 (matchedIf)]
    NUMCONST     reduce using rule 32 (stmt)
    NUMCONST     [reduce using rule 46 (matchedIf)]
    CHARCONST    reduce using rule 32 (stmt)
    CHARCONST    [reduce using rule 46 (matchedIf)]
    STRINGCONST  reduce using rule 32 (stmt)
    STRINGCONST  [reduce using rule 46 (matchedIf)]
    BOOLCONST    reduce using rule 32 (stmt)
    BOOLCONST    [reduce using rule 46 (matchedIf)]
    IF           reduce using rule 32 (stmt)
    IF           [reduce using rule 46 (matchedIf)]
    ELSE         reduce using rule 32 (stmt)
    ELSE         [reduce using rule 46 (matchedIf)]
    WHILE        reduce using rule 32 (stmt)
    WHILE        [reduce using rule 46 (matchedIf)]
    FOR          reduce using rule 32 (stmt)
    FOR          [reduce using rule 46 (matchedIf)]
    RETURN       reduce using rule 32 (stmt)
    RETURN       [reduce using rule 46 (matchedIf)]
    BREAK        reduce using rule 32 (stmt)
    BREAK        [reduce using rule 46 (matchedIf)]
    NOT          reduce using rule 32 (stmt)
    NOT          [reduce using rule 46 (matchedIf)]
    LCURL        reduce using rule 32 (stmt)
    LCURL        [reduce using rule 46 (matchedIf)]
    RCURL        reduce using rule 32 (stmt)
    RCURL        [reduce using rule 46 (matchedIf)]
    SUB          reduce using rule 32 (stmt)
    SUB          [reduce using rule 46 (matchedIf)]
    MUL          reduce using rule 32 (stmt)
    MUL          [reduce using rule 46 (matchedIf)]
    QMARK        reduce using rule 32 (stmt)
    QMARK        [reduce using rule 46 (matchedIf)]
    LPAREN       reduce using rule 32 (stmt)
    LPAREN       [reduce using rule 46 (matchedIf)]
    $default     reduce using rule 32 (stmt)


State 134

   33 stmt: returnStmt •
   47 matchedIf: returnStmt •

    ID           reduce using rule 33 (stmt)
    ID           [reduce using rule 47 (matchedIf)]
    NUMCONST     reduce using rule 33 (stmt)
    NUMCONST     [reduce using rule 47 (matchedIf)]
    CHARCONST    reduce using rule 33 (stmt)
    CHARCONST    [reduce using rule 47 (matchedIf)]
    STRINGCONST  reduce using rule 33 (stmt)
    STRINGCONST  [reduce using rule 47 (matchedIf)]
    BOOLCONST    reduce using rule 33 (stmt)
    BOOLCONST    [reduce using rule 47 (matchedIf)]
    IF           reduce using rule 33 (stmt)
    IF           [reduce using rule 47 (matchedIf)]
    ELSE         reduce using rule 33 (stmt)
    ELSE         [reduce using rule 47 (matchedIf)]
    WHILE        reduce using rule 33 (stmt)
    WHILE        [reduce using rule 47 (matchedIf)]
    FOR          reduce using rule 33 (stmt)
    FOR          [reduce using rule 47 (matchedIf)]
    RETURN       reduce using rule 33 (stmt)
    RETURN       [reduce using rule 47 (matchedIf)]
    BREAK        reduce using rule 33 (stmt)
    BREAK        [reduce using rule 47 (matchedIf)]
    NOT          reduce using rule 33 (stmt)
    NOT          [reduce using rule 47 (matchedIf)]
    LCURL        reduce using rule 33 (stmt)
    LCURL        [reduce using rule 47 (matchedIf)]
    RCURL        reduce using rule 33 (stmt)
    RCURL        [reduce using rule 47 (matchedIf)]
    SUB          reduce using rule 33 (stmt)
    SUB          [reduce using rule 47 (matchedIf)]
    MUL          reduce using rule 33 (stmt)
    MUL          [reduce using rule 47 (matchedIf)]
    QMARK        reduce using rule 33 (stmt)
    QMARK        [reduce using rule 47 (matchedIf)]
    LPAREN       reduce using rule 33 (stmt)
    LPAREN       [reduce using rule 47 (matchedIf)]
    $default     reduce using rule 33 (stmt)


State 135

   34 stmt: breakStmt •
   48 matchedIf: breakStmt •

    ID           reduce using rule 34 (stmt)
    ID           [reduce using rule 48 (matchedIf)]
    NUMCONST     reduce using rule 34 (stmt)
    NUMCONST     [reduce using rule 48 (matchedIf)]
    CHARCONST    reduce using rule 34 (stmt)
    CHARCONST    [reduce using rule 48 (matchedIf)]
    STRINGCONST  reduce using rule 34 (stmt)
    STRINGCONST  [reduce using rule 48 (matchedIf)]
    BOOLCONST    reduce using rule 34 (stmt)
    BOOLCONST    [reduce using rule 48 (matchedIf)]
    IF           reduce using rule 34 (stmt)
    IF           [reduce using rule 48 (matchedIf)]
    ELSE         reduce using rule 34 (stmt)
    ELSE         [reduce using rule 48 (matchedIf)]
    WHILE        reduce using rule 34 (stmt)
    WHILE        [reduce using rule 48 (matchedIf)]
    FOR          reduce using rule 34 (stmt)
    FOR          [reduce using rule 48 (matchedIf)]
    RETURN       reduce using rule 34 (stmt)
    RETURN       [reduce using rule 48 (matchedIf)]
    BREAK        reduce using rule 34 (stmt)
    BREAK        [reduce using rule 48 (matchedIf)]
    NOT          reduce using rule 34 (stmt)
    NOT          [reduce using rule 48 (matchedIf)]
    LCURL        reduce using rule 34 (stmt)
    LCURL        [reduce using rule 48 (matchedIf)]
    RCURL        reduce using rule 34 (stmt)
    RCURL        [reduce using rule 48 (matchedIf)]
    SUB          reduce using rule 34 (stmt)
    SUB          [reduce using rule 48 (matchedIf)]
    MUL          reduce using rule 34 (stmt)
    MUL          [reduce using rule 48 (matchedIf)]
    QMARK        reduce using rule 34 (stmt)
    QMARK        [reduce using rule 48 (matchedIf)]
    LPAREN       reduce using rule 34 (stmt)
    LPAREN       [reduce using rule 48 (matchedIf)]
    $default     reduce using rule 34 (stmt)


State 136

   35 expStmt: exp • COLON

    COLON  shift, and go to state 147


State 137

  105 argList: argList COMMA exp •

    $default  reduce using rule 105 (argList)


State 138

    7 scopedVarDecl: STATIC typeSpec varDecl • SEMI

    SEMI  shift, and go to state 148


State 139

    6 varDecl: typeSpec • varDeclList SEMI

    ID  shift, and go to state 34

    varDeclList  go to state 15
    varDeclInit  go to state 16
    varDeclID    go to state 17


State 140

    8 scopedVarDecl: typeSpec varDeclList SEMI •

    $default  reduce using rule 8 (scopedVarDecl)


State 141

   43 matchedIf: IF RPAREN • simpleExp LPAREN THEN matchedIf ELSE matchedIf
   49 unmatchedIf: IF RPAREN • simpleExp LPAREN THEN stmt
   50            | IF RPAREN • simpleExp LPAREN THEN matchedIf ELSE unmatchedIf

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    NOT          shift, and go to state 41
    SUB          shift, and go to state 42
    MUL          shift, and go to state 43
    QMARK        shift, and go to state 44
    LPAREN       shift, and go to state 45

    simpleExp    go to state 149
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryOp      go to state 53
    factor       go to state 54
    mutable      go to state 55
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 142

   51 itrStmt: WHILE simpleExp • DO stmt
   67 simpleExp: simpleExp • OR simpleExp

    DO  shift, and go to state 150
    OR  shift, and go to state 72


State 143

   52 itrStmt: FOR ID • EQ itrRange DO stmt

    EQ  shift, and go to state 151


State 144

   55 returnStmt: RETURN SEMI •

    $default  reduce using rule 55 (returnStmt)


State 145

   56 returnStmt: RETURN exp • SEMI

    SEMI  shift, and go to state 152


State 146

   57 breakStmt: BREAK SEMI •

    $default  reduce using rule 57 (breakStmt)


State 147

   35 expStmt: exp COLON •

    $default  reduce using rule 35 (expStmt)


State 148

    7 scopedVarDecl: STATIC typeSpec varDecl SEMI •

    $default  reduce using rule 7 (scopedVarDecl)


State 149

   43 matchedIf: IF RPAREN simpleExp • LPAREN THEN matchedIf ELSE matchedIf
   49 unmatchedIf: IF RPAREN simpleExp • LPAREN THEN stmt
   50            | IF RPAREN simpleExp • LPAREN THEN matchedIf ELSE unmatchedIf
   67 simpleExp: simpleExp • OR simpleExp

    OR      shift, and go to state 72
    LPAREN  shift, and go to state 153


State 150

   51 itrStmt: WHILE simpleExp DO • stmt

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    IF           shift, and go to state 121
    WHILE        shift, and go to state 122
    FOR          shift, and go to state 123
    RETURN       shift, and go to state 124
    BREAK        shift, and go to state 125
    NOT          shift, and go to state 41
    LCURL        shift, and go to state 61
    SUB          shift, and go to state 42
    MUL          shift, and go to state 43
    QMARK        shift, and go to state 44
    LPAREN       shift, and go to state 45

    stmt          go to state 154
    expStmt       go to state 128
    compoundStmt  go to state 129
    selectStmt    go to state 130
    matchedIf     go to state 131
    unmatchedIf   go to state 132
    itrStmt       go to state 133
    returnStmt    go to state 134
    breakStmt     go to state 135
    exp           go to state 136
    simpleExp     go to state 70
    andExp        go to state 47
    unaryRelExp   go to state 48
    relExp        go to state 49
    sumExp        go to state 50
    mulExp        go to state 51
    unaryExp      go to state 52
    unaryOp       go to state 53
    factor        go to state 54
    mutable       go to state 71
    immutable     go to state 56
    call          go to state 57
    constant      go to state 58


State 151

   52 itrStmt: FOR ID EQ • itrRange DO stmt

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    NOT          shift, and go to state 41
    SUB          shift, and go to state 42
    MUL          shift, and go to state 43
    QMARK        shift, and go to state 44
    LPAREN       shift, and go to state 45

    itrRange     go to state 155
    simpleExp    go to state 156
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryOp      go to state 53
    factor       go to state 54
    mutable      go to state 55
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 152

   56 returnStmt: RETURN exp SEMI •

    $default  reduce using rule 56 (returnStmt)


State 153

   43 matchedIf: IF RPAREN simpleExp LPAREN • THEN matchedIf ELSE matchedIf
   49 unmatchedIf: IF RPAREN simpleExp LPAREN • THEN stmt
   50            | IF RPAREN simpleExp LPAREN • THEN matchedIf ELSE unmatchedIf

    THEN  shift, and go to state 157


State 154

   51 itrStmt: WHILE simpleExp DO stmt •

    $default  reduce using rule 51 (itrStmt)


State 155

   52 itrStmt: FOR ID EQ itrRange • DO stmt

    DO  shift, and go to state 158


State 156

   53 itrRange: simpleExp • TO simpleExp
   54         | simpleExp • TO simpleExp BY simpleExp
   67 simpleExp: simpleExp • OR simpleExp

    TO  shift, and go to state 159
    OR  shift, and go to state 72


State 157

   43 matchedIf: IF RPAREN simpleExp LPAREN THEN • matchedIf ELSE matchedIf
   49 unmatchedIf: IF RPAREN simpleExp LPAREN THEN • stmt
   50            | IF RPAREN simpleExp LPAREN THEN • matchedIf ELSE unmatchedIf

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    IF           shift, and go to state 121
    WHILE        shift, and go to state 122
    FOR          shift, and go to state 123
    RETURN       shift, and go to state 124
    BREAK        shift, and go to state 125
    NOT          shift, and go to state 41
    LCURL        shift, and go to state 61
    SUB          shift, and go to state 42
    MUL          shift, and go to state 43
    QMARK        shift, and go to state 44
    LPAREN       shift, and go to state 45

    stmt          go to state 160
    expStmt       go to state 128
    compoundStmt  go to state 129
    selectStmt    go to state 130
    matchedIf     go to state 161
    unmatchedIf   go to state 132
    itrStmt       go to state 133
    returnStmt    go to state 134
    breakStmt     go to state 135
    exp           go to state 136
    simpleExp     go to state 70
    andExp        go to state 47
    unaryRelExp   go to state 48
    relExp        go to state 49
    sumExp        go to state 50
    mulExp        go to state 51
    unaryExp      go to state 52
    unaryOp       go to state 53
    factor        go to state 54
    mutable       go to state 71
    immutable     go to state 56
    call          go to state 57
    constant      go to state 58


State 158

   52 itrStmt: FOR ID EQ itrRange DO • stmt

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    IF           shift, and go to state 121
    WHILE        shift, and go to state 122
    FOR          shift, and go to state 123
    RETURN       shift, and go to state 124
    BREAK        shift, and go to state 125
    NOT          shift, and go to state 41
    LCURL        shift, and go to state 61
    SUB          shift, and go to state 42
    MUL          shift, and go to state 43
    QMARK        shift, and go to state 44
    LPAREN       shift, and go to state 45

    stmt          go to state 162
    expStmt       go to state 128
    compoundStmt  go to state 129
    selectStmt    go to state 130
    matchedIf     go to state 131
    unmatchedIf   go to state 132
    itrStmt       go to state 133
    returnStmt    go to state 134
    breakStmt     go to state 135
    exp           go to state 136
    simpleExp     go to state 70
    andExp        go to state 47
    unaryRelExp   go to state 48
    relExp        go to state 49
    sumExp        go to state 50
    mulExp        go to state 51
    unaryExp      go to state 52
    unaryOp       go to state 53
    factor        go to state 54
    mutable       go to state 71
    immutable     go to state 56
    call          go to state 57
    constant      go to state 58


State 159

   53 itrRange: simpleExp TO • simpleExp
   54         | simpleExp TO • simpleExp BY simpleExp

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    NOT          shift, and go to state 41
    SUB          shift, and go to state 42
    MUL          shift, and go to state 43
    QMARK        shift, and go to state 44
    LPAREN       shift, and go to state 45

    simpleExp    go to state 163
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryOp      go to state 53
    factor       go to state 54
    mutable      go to state 55
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 160

   49 unmatchedIf: IF RPAREN simpleExp LPAREN THEN stmt •

    $default  reduce using rule 49 (unmatchedIf)


State 161

   41 selectStmt: matchedIf •
   43 matchedIf: IF RPAREN simpleExp LPAREN THEN matchedIf • ELSE matchedIf
   50 unmatchedIf: IF RPAREN simpleExp LPAREN THEN matchedIf • ELSE unmatchedIf

    ELSE  shift, and go to state 164

    ELSE      [reduce using rule 41 (selectStmt)]
    $default  reduce using rule 41 (selectStmt)


State 162

   52 itrStmt: FOR ID EQ itrRange DO stmt •

    $default  reduce using rule 52 (itrStmt)


State 163

   53 itrRange: simpleExp TO simpleExp •
   54         | simpleExp TO simpleExp • BY simpleExp
   67 simpleExp: simpleExp • OR simpleExp

    BY  shift, and go to state 165
    OR  shift, and go to state 72

    $default  reduce using rule 53 (itrRange)


State 164

   43 matchedIf: IF RPAREN simpleExp LPAREN THEN matchedIf ELSE • matchedIf
   50 unmatchedIf: IF RPAREN simpleExp LPAREN THEN matchedIf ELSE • unmatchedIf

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    IF           shift, and go to state 121
    WHILE        shift, and go to state 122
    FOR          shift, and go to state 123
    RETURN       shift, and go to state 124
    BREAK        shift, and go to state 125
    NOT          shift, and go to state 41
    LCURL        shift, and go to state 61
    SUB          shift, and go to state 42
    MUL          shift, and go to state 43
    QMARK        shift, and go to state 44
    LPAREN       shift, and go to state 45

    expStmt       go to state 166
    compoundStmt  go to state 167
    matchedIf     go to state 168
    unmatchedIf   go to state 169
    itrStmt       go to state 170
    returnStmt    go to state 171
    breakStmt     go to state 172
    exp           go to state 136
    simpleExp     go to state 70
    andExp        go to state 47
    unaryRelExp   go to state 48
    relExp        go to state 49
    sumExp        go to state 50
    mulExp        go to state 51
    unaryExp      go to state 52
    unaryOp       go to state 53
    factor        go to state 54
    mutable       go to state 71
    immutable     go to state 56
    call          go to state 57
    constant      go to state 58


State 165

   54 itrRange: simpleExp TO simpleExp BY • simpleExp

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    NOT          shift, and go to state 41
    SUB          shift, and go to state 42
    MUL          shift, and go to state 43
    QMARK        shift, and go to state 44
    LPAREN       shift, and go to state 45

    simpleExp    go to state 173
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryOp      go to state 53
    factor       go to state 54
    mutable      go to state 55
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 166

   44 matchedIf: expStmt •

    $default  reduce using rule 44 (matchedIf)


State 167

   45 matchedIf: compoundStmt •

    $default  reduce using rule 45 (matchedIf)


State 168

   43 matchedIf: IF RPAREN simpleExp LPAREN THEN matchedIf ELSE matchedIf •

    $default  reduce using rule 43 (matchedIf)


State 169

   50 unmatchedIf: IF RPAREN simpleExp LPAREN THEN matchedIf ELSE unmatchedIf •

    $default  reduce using rule 50 (unmatchedIf)


State 170

   46 matchedIf: itrStmt •

    $default  reduce using rule 46 (matchedIf)


State 171

   47 matchedIf: returnStmt •

    $default  reduce using rule 47 (matchedIf)


State 172

   48 matchedIf: breakStmt •

    $default  reduce using rule 48 (matchedIf)


State 173

   54 itrRange: simpleExp TO simpleExp BY simpleExp •
   67 simpleExp: simpleExp • OR simpleExp

    OR  shift, and go to state 72

    $default  reduce using rule 54 (itrRange)
